//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_PersonContacts_Region", "Region", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.Region), "PersonContacts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.PersonContacts), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_PersonContacts_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.Country), "PersonContacts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.PersonContacts), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_Application_Entry", "Entry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.Entry), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.Application), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_Entry_Semester", "Semester", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.Semester), "Entry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.Entry), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_Application_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.Person), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.Application), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_Person_ForeignCountry", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.Country), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.Person), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_Person_PassportType", "PassportType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.PassportType), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.Person), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_Person_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineAbit2013.User), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.Person), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_PersonAddInfo_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineAbit2013.Person), "PersonAddInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.PersonAddInfo), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_PersonChangeStudyFormReason_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineAbit2013.Person), "PersonChangeStudyFormReason", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.PersonChangeStudyFormReason), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_PersonContacts_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineAbit2013.Person), "PersonContacts", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.PersonContacts), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_PersonCurrentEducation_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineAbit2013.Person), "PersonCurrentEducation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.PersonCurrentEducation), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_PersonDisorderInfo_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineAbit2013.Person), "PersonDisorderInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.PersonDisorderInfo), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_PersonHighEducationInfo_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineAbit2013.Person), "PersonHighEducationInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.PersonHighEducationInfo), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_PersonVisaInfo_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineAbit2013.Person), "PersonVisaInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.PersonVisaInfo), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_PersonCurrentEducation_Semester", "Semester", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.Semester), "PersonCurrentEducation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.PersonCurrentEducation), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_PersonHighEducationInfo_Qualification", "Qualification", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.Qualification), "PersonHighEducationInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.PersonHighEducationInfo), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_PersonSchoolInfo_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineAbit2013.Person), "PersonSchoolInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.PersonSchoolInfo), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_PersonSchoolInfo_SchoolExitClass", "SchoolExitClass", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.SchoolExitClass), "PersonSchoolInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.PersonSchoolInfo), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_PersonWork_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineAbit2013.Person), "PersonWork", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.PersonWork), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_PersonSportQualification_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineAbit2013.Person), "PersonSportQualification", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.PersonSportQualification), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_PersonSportQualification_SportQualification", "SportQualification", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.SportQualification), "PersonSportQualification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.PersonSportQualification), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_Person_SPOSchoolExitClassId_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineAbit2013.Person), "Person_SPOSchoolExitClass", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.Person_SPOSchoolExitClass), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_Person_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineAbit2013.User), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.Person), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_PersonScienceWork_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.Person), "PersonScienceWork", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.PersonScienceWork), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_User_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineAbit2013.User), "User1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.User), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_EgeMark_EgeCertificate", "EgeCertificate", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.EgeCertificate), "EgeMark", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.EgeMark), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_EgeMark_EgeExam", "EgeExam", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.EgeExam), "EgeMark", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.EgeMark), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_PersonEducationDocument_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.Country), "PersonEducationDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.PersonEducationDocument), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_PersonEducationDocument_Language", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.Language), "PersonEducationDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.PersonEducationDocument), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_PersonEducationDocument_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineAbit2013.Person), "PersonEducationDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.PersonEducationDocument), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_PersonEducationDocument_Region", "Region", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.Region), "PersonEducationDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.PersonEducationDocument), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_PersonAddInfo_ReturnDocumentType", "ReturnDocumentType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineAbit2013.ReturnDocumentType), "PersonAddInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.PersonAddInfo), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_OlympBook_OlympLevel", "OlympLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineAbit2013.OlympLevel), "OlympBook", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.OlympBook), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_OlympBook_OlympName", "OlympName", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineAbit2013.OlympName), "OlympBook", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.OlympBook), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_OlympBook_OlympSubject", "OlympSubject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineAbit2013.OlympSubject), "OlympBook", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.OlympBook), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_OlympBook_OlympType", "OlympType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineAbit2013.OlympType), "OlympBook", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.OlympBook), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_Olympiads_OlympName", "OlympName", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineAbit2013.OlympName), "Olympiads", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.Olympiads), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_Olympiads_OlympSubject", "OlympSubject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineAbit2013.OlympSubject), "Olympiads", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.Olympiads), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_Olympiads_OlympType", "OlympType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineAbit2013.OlympType), "Olympiads", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.Olympiads), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_Olympiads_OlympValue", "OlympValue", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineAbit2013.OlympValue), "Olympiads", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.Olympiads), true)]
[assembly: EdmRelationshipAttribute("OnlinePriem2012Model", "FK_Olympiads_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineAbit2013.Person), "Olympiads", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineAbit2013.Olympiads), true)]

#endregion

namespace OnlineAbit2013
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class OnlinePriemEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект OnlinePriemEntities, используя строку соединения из раздела "OnlinePriemEntities" файла конфигурации приложения.
        /// </summary>
        public OnlinePriemEntities() : base("name=OnlinePriemEntities", "OnlinePriemEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта OnlinePriemEntities.
        /// </summary>
        public OnlinePriemEntities(string connectionString) : base(connectionString, "OnlinePriemEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта OnlinePriemEntities.
        /// </summary>
        public OnlinePriemEntities(EntityConnection connection) : base(connection, "OnlinePriemEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PassportType> PassportType
        {
            get
            {
                if ((_PassportType == null))
                {
                    _PassportType = base.CreateObjectSet<PassportType>("PassportType");
                }
                return _PassportType;
            }
        }
        private ObjectSet<PassportType> _PassportType;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PersonAddInfo> PersonAddInfo
        {
            get
            {
                if ((_PersonAddInfo == null))
                {
                    _PersonAddInfo = base.CreateObjectSet<PersonAddInfo>("PersonAddInfo");
                }
                return _PersonAddInfo;
            }
        }
        private ObjectSet<PersonAddInfo> _PersonAddInfo;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PersonCurrentEducation> PersonCurrentEducation
        {
            get
            {
                if ((_PersonCurrentEducation == null))
                {
                    _PersonCurrentEducation = base.CreateObjectSet<PersonCurrentEducation>("PersonCurrentEducation");
                }
                return _PersonCurrentEducation;
            }
        }
        private ObjectSet<PersonCurrentEducation> _PersonCurrentEducation;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PersonScienceWork> PersonScienceWork
        {
            get
            {
                if ((_PersonScienceWork == null))
                {
                    _PersonScienceWork = base.CreateObjectSet<PersonScienceWork>("PersonScienceWork");
                }
                return _PersonScienceWork;
            }
        }
        private ObjectSet<PersonScienceWork> _PersonScienceWork;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PersonWork> PersonWork
        {
            get
            {
                if ((_PersonWork == null))
                {
                    _PersonWork = base.CreateObjectSet<PersonWork>("PersonWork");
                }
                return _PersonWork;
            }
        }
        private ObjectSet<PersonWork> _PersonWork;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Region> Region
        {
            get
            {
                if ((_Region == null))
                {
                    _Region = base.CreateObjectSet<Region>("Region");
                }
                return _Region;
            }
        }
        private ObjectSet<Region> _Region;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<AbiturientType> AbiturientType
        {
            get
            {
                if ((_AbiturientType == null))
                {
                    _AbiturientType = base.CreateObjectSet<AbiturientType>("AbiturientType");
                }
                return _AbiturientType;
            }
        }
        private ObjectSet<AbiturientType> _AbiturientType;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Application> Application
        {
            get
            {
                if ((_Application == null))
                {
                    _Application = base.CreateObjectSet<Application>("Application");
                }
                return _Application;
            }
        }
        private ObjectSet<Application> _Application;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Entry> Entry
        {
            get
            {
                if ((_Entry == null))
                {
                    _Entry = base.CreateObjectSet<Entry>("Entry");
                }
                return _Entry;
            }
        }
        private ObjectSet<Entry> _Entry;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Semester> Semester
        {
            get
            {
                if ((_Semester == null))
                {
                    _Semester = base.CreateObjectSet<Semester>("Semester");
                }
                return _Semester;
            }
        }
        private ObjectSet<Semester> _Semester;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<SP_StudyLevel> SP_StudyLevel
        {
            get
            {
                if ((_SP_StudyLevel == null))
                {
                    _SP_StudyLevel = base.CreateObjectSet<SP_StudyLevel>("SP_StudyLevel");
                }
                return _SP_StudyLevel;
            }
        }
        private ObjectSet<SP_StudyLevel> _SP_StudyLevel;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Abiturient> Abiturient
        {
            get
            {
                if ((_Abiturient == null))
                {
                    _Abiturient = base.CreateObjectSet<Abiturient>("Abiturient");
                }
                return _Abiturient;
            }
        }
        private ObjectSet<Abiturient> _Abiturient;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PersonDisorderInfo> PersonDisorderInfo
        {
            get
            {
                if ((_PersonDisorderInfo == null))
                {
                    _PersonDisorderInfo = base.CreateObjectSet<PersonDisorderInfo>("PersonDisorderInfo");
                }
                return _PersonDisorderInfo;
            }
        }
        private ObjectSet<PersonDisorderInfo> _PersonDisorderInfo;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PersonChangeStudyFormReason> PersonChangeStudyFormReason
        {
            get
            {
                if ((_PersonChangeStudyFormReason == null))
                {
                    _PersonChangeStudyFormReason = base.CreateObjectSet<PersonChangeStudyFormReason>("PersonChangeStudyFormReason");
                }
                return _PersonChangeStudyFormReason;
            }
        }
        private ObjectSet<PersonChangeStudyFormReason> _PersonChangeStudyFormReason;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PersonContacts> PersonContacts
        {
            get
            {
                if ((_PersonContacts == null))
                {
                    _PersonContacts = base.CreateObjectSet<PersonContacts>("PersonContacts");
                }
                return _PersonContacts;
            }
        }
        private ObjectSet<PersonContacts> _PersonContacts;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PersonHighEducationInfo> PersonHighEducationInfo
        {
            get
            {
                if ((_PersonHighEducationInfo == null))
                {
                    _PersonHighEducationInfo = base.CreateObjectSet<PersonHighEducationInfo>("PersonHighEducationInfo");
                }
                return _PersonHighEducationInfo;
            }
        }
        private ObjectSet<PersonHighEducationInfo> _PersonHighEducationInfo;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Country> Country
        {
            get
            {
                if ((_Country == null))
                {
                    _Country = base.CreateObjectSet<Country>("Country");
                }
                return _Country;
            }
        }
        private ObjectSet<Country> _Country;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PersonVisaInfo> PersonVisaInfo
        {
            get
            {
                if ((_PersonVisaInfo == null))
                {
                    _PersonVisaInfo = base.CreateObjectSet<PersonVisaInfo>("PersonVisaInfo");
                }
                return _PersonVisaInfo;
            }
        }
        private ObjectSet<PersonVisaInfo> _PersonVisaInfo;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ForeignLanguageLevel> ForeignLanguageLevel
        {
            get
            {
                if ((_ForeignLanguageLevel == null))
                {
                    _ForeignLanguageLevel = base.CreateObjectSet<ForeignLanguageLevel>("ForeignLanguageLevel");
                }
                return _ForeignLanguageLevel;
            }
        }
        private ObjectSet<ForeignLanguageLevel> _ForeignLanguageLevel;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ForeignLanguage> ForeignLanguage
        {
            get
            {
                if ((_ForeignLanguage == null))
                {
                    _ForeignLanguage = base.CreateObjectSet<ForeignLanguage>("ForeignLanguage");
                }
                return _ForeignLanguage;
            }
        }
        private ObjectSet<ForeignLanguage> _ForeignLanguage;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Language> Language
        {
            get
            {
                if ((_Language == null))
                {
                    _Language = base.CreateObjectSet<Language>("Language");
                }
                return _Language;
            }
        }
        private ObjectSet<Language> _Language;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Person> Person
        {
            get
            {
                if ((_Person == null))
                {
                    _Person = base.CreateObjectSet<Person>("Person");
                }
                return _Person;
            }
        }
        private ObjectSet<Person> _Person;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Qualification> Qualification
        {
            get
            {
                if ((_Qualification == null))
                {
                    _Qualification = base.CreateObjectSet<Qualification>("Qualification");
                }
                return _Qualification;
            }
        }
        private ObjectSet<Qualification> _Qualification;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<MotivationMail> MotivationMail
        {
            get
            {
                if ((_MotivationMail == null))
                {
                    _MotivationMail = base.CreateObjectSet<MotivationMail>("MotivationMail");
                }
                return _MotivationMail;
            }
        }
        private ObjectSet<MotivationMail> _MotivationMail;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PersonSchoolInfo> PersonSchoolInfo
        {
            get
            {
                if ((_PersonSchoolInfo == null))
                {
                    _PersonSchoolInfo = base.CreateObjectSet<PersonSchoolInfo>("PersonSchoolInfo");
                }
                return _PersonSchoolInfo;
            }
        }
        private ObjectSet<PersonSchoolInfo> _PersonSchoolInfo;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<SchoolExitClass> SchoolExitClass
        {
            get
            {
                if ((_SchoolExitClass == null))
                {
                    _SchoolExitClass = base.CreateObjectSet<SchoolExitClass>("SchoolExitClass");
                }
                return _SchoolExitClass;
            }
        }
        private ObjectSet<SchoolExitClass> _SchoolExitClass;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PersonSportQualification> PersonSportQualification
        {
            get
            {
                if ((_PersonSportQualification == null))
                {
                    _PersonSportQualification = base.CreateObjectSet<PersonSportQualification>("PersonSportQualification");
                }
                return _PersonSportQualification;
            }
        }
        private ObjectSet<PersonSportQualification> _PersonSportQualification;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<SportQualification> SportQualification
        {
            get
            {
                if ((_SportQualification == null))
                {
                    _SportQualification = base.CreateObjectSet<SportQualification>("SportQualification");
                }
                return _SportQualification;
            }
        }
        private ObjectSet<SportQualification> _SportQualification;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Person_SPOSchoolExitClass> Person_SPOSchoolExitClass
        {
            get
            {
                if ((_Person_SPOSchoolExitClass == null))
                {
                    _Person_SPOSchoolExitClass = base.CreateObjectSet<Person_SPOSchoolExitClass>("Person_SPOSchoolExitClass");
                }
                return _Person_SPOSchoolExitClass;
            }
        }
        private ObjectSet<Person_SPOSchoolExitClass> _Person_SPOSchoolExitClass;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<RectorScholarshipApplication> RectorScholarshipApplication
        {
            get
            {
                if ((_RectorScholarshipApplication == null))
                {
                    _RectorScholarshipApplication = base.CreateObjectSet<RectorScholarshipApplication>("RectorScholarshipApplication");
                }
                return _RectorScholarshipApplication;
            }
        }
        private ObjectSet<RectorScholarshipApplication> _RectorScholarshipApplication;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<RectorScholarshipApplicationFile> RectorScholarshipApplicationFile
        {
            get
            {
                if ((_RectorScholarshipApplicationFile == null))
                {
                    _RectorScholarshipApplicationFile = base.CreateObjectSet<RectorScholarshipApplicationFile>("RectorScholarshipApplicationFile");
                }
                return _RectorScholarshipApplicationFile;
            }
        }
        private ObjectSet<RectorScholarshipApplicationFile> _RectorScholarshipApplicationFile;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<EgeCertificate> EgeCertificate
        {
            get
            {
                if ((_EgeCertificate == null))
                {
                    _EgeCertificate = base.CreateObjectSet<EgeCertificate>("EgeCertificate");
                }
                return _EgeCertificate;
            }
        }
        private ObjectSet<EgeCertificate> _EgeCertificate;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<EgeExam> EgeExam
        {
            get
            {
                if ((_EgeExam == null))
                {
                    _EgeExam = base.CreateObjectSet<EgeExam>("EgeExam");
                }
                return _EgeExam;
            }
        }
        private ObjectSet<EgeExam> _EgeExam;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<EgeMark> EgeMark
        {
            get
            {
                if ((_EgeMark == null))
                {
                    _EgeMark = base.CreateObjectSet<EgeMark>("EgeMark");
                }
                return _EgeMark;
            }
        }
        private ObjectSet<EgeMark> _EgeMark;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<VuzAdditionalType> VuzAdditionalType
        {
            get
            {
                if ((_VuzAdditionalType == null))
                {
                    _VuzAdditionalType = base.CreateObjectSet<VuzAdditionalType>("VuzAdditionalType");
                }
                return _VuzAdditionalType;
            }
        }
        private ObjectSet<VuzAdditionalType> _VuzAdditionalType;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PersonEducationDocument> PersonEducationDocument
        {
            get
            {
                if ((_PersonEducationDocument == null))
                {
                    _PersonEducationDocument = base.CreateObjectSet<PersonEducationDocument>("PersonEducationDocument");
                }
                return _PersonEducationDocument;
            }
        }
        private ObjectSet<PersonEducationDocument> _PersonEducationDocument;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ReturnDocumentType> ReturnDocumentType
        {
            get
            {
                if ((_ReturnDocumentType == null))
                {
                    _ReturnDocumentType = base.CreateObjectSet<ReturnDocumentType>("ReturnDocumentType");
                }
                return _ReturnDocumentType;
            }
        }
        private ObjectSet<ReturnDocumentType> _ReturnDocumentType;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<OlympBook> OlympBook
        {
            get
            {
                if ((_OlympBook == null))
                {
                    _OlympBook = base.CreateObjectSet<OlympBook>("OlympBook");
                }
                return _OlympBook;
            }
        }
        private ObjectSet<OlympBook> _OlympBook;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Olympiads> Olympiads
        {
            get
            {
                if ((_Olympiads == null))
                {
                    _Olympiads = base.CreateObjectSet<Olympiads>("Olympiads");
                }
                return _Olympiads;
            }
        }
        private ObjectSet<Olympiads> _Olympiads;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<OlympName> OlympName
        {
            get
            {
                if ((_OlympName == null))
                {
                    _OlympName = base.CreateObjectSet<OlympName>("OlympName");
                }
                return _OlympName;
            }
        }
        private ObjectSet<OlympName> _OlympName;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<OlympSubject> OlympSubject
        {
            get
            {
                if ((_OlympSubject == null))
                {
                    _OlympSubject = base.CreateObjectSet<OlympSubject>("OlympSubject");
                }
                return _OlympSubject;
            }
        }
        private ObjectSet<OlympSubject> _OlympSubject;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<OlympType> OlympType
        {
            get
            {
                if ((_OlympType == null))
                {
                    _OlympType = base.CreateObjectSet<OlympType>("OlympType");
                }
                return _OlympType;
            }
        }
        private ObjectSet<OlympType> _OlympType;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<OlympValue> OlympValue
        {
            get
            {
                if ((_OlympValue == null))
                {
                    _OlympValue = base.CreateObjectSet<OlympValue>("OlympValue");
                }
                return _OlympValue;
            }
        }
        private ObjectSet<OlympValue> _OlympValue;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<OlympLevel> OlympLevel
        {
            get
            {
                if ((_OlympLevel == null))
                {
                    _OlympLevel = base.CreateObjectSet<OlympLevel>("OlympLevel");
                }
                return _OlympLevel;
            }
        }
        private ObjectSet<OlympLevel> _OlympLevel;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PassportType. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPassportType(PassportType passportType)
        {
            base.AddObject("PassportType", passportType);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PersonAddInfo. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPersonAddInfo(PersonAddInfo personAddInfo)
        {
            base.AddObject("PersonAddInfo", personAddInfo);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PersonCurrentEducation. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPersonCurrentEducation(PersonCurrentEducation personCurrentEducation)
        {
            base.AddObject("PersonCurrentEducation", personCurrentEducation);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PersonScienceWork. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPersonScienceWork(PersonScienceWork personScienceWork)
        {
            base.AddObject("PersonScienceWork", personScienceWork);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PersonWork. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPersonWork(PersonWork personWork)
        {
            base.AddObject("PersonWork", personWork);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Region. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRegion(Region region)
        {
            base.AddObject("Region", region);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet User. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet AbiturientType. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAbiturientType(AbiturientType abiturientType)
        {
            base.AddObject("AbiturientType", abiturientType);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Application. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToApplication(Application application)
        {
            base.AddObject("Application", application);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Entry. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToEntry(Entry entry)
        {
            base.AddObject("Entry", entry);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Semester. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSemester(Semester semester)
        {
            base.AddObject("Semester", semester);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet SP_StudyLevel. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSP_StudyLevel(SP_StudyLevel sP_StudyLevel)
        {
            base.AddObject("SP_StudyLevel", sP_StudyLevel);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Abiturient. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAbiturient(Abiturient abiturient)
        {
            base.AddObject("Abiturient", abiturient);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PersonDisorderInfo. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPersonDisorderInfo(PersonDisorderInfo personDisorderInfo)
        {
            base.AddObject("PersonDisorderInfo", personDisorderInfo);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PersonChangeStudyFormReason. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPersonChangeStudyFormReason(PersonChangeStudyFormReason personChangeStudyFormReason)
        {
            base.AddObject("PersonChangeStudyFormReason", personChangeStudyFormReason);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PersonContacts. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPersonContacts(PersonContacts personContacts)
        {
            base.AddObject("PersonContacts", personContacts);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PersonHighEducationInfo. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPersonHighEducationInfo(PersonHighEducationInfo personHighEducationInfo)
        {
            base.AddObject("PersonHighEducationInfo", personHighEducationInfo);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Country. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCountry(Country country)
        {
            base.AddObject("Country", country);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PersonVisaInfo. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPersonVisaInfo(PersonVisaInfo personVisaInfo)
        {
            base.AddObject("PersonVisaInfo", personVisaInfo);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ForeignLanguageLevel. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToForeignLanguageLevel(ForeignLanguageLevel foreignLanguageLevel)
        {
            base.AddObject("ForeignLanguageLevel", foreignLanguageLevel);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ForeignLanguage. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToForeignLanguage(ForeignLanguage foreignLanguage)
        {
            base.AddObject("ForeignLanguage", foreignLanguage);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Language. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToLanguage(Language language)
        {
            base.AddObject("Language", language);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Person. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPerson(Person person)
        {
            base.AddObject("Person", person);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Qualification. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToQualification(Qualification qualification)
        {
            base.AddObject("Qualification", qualification);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet MotivationMail. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMotivationMail(MotivationMail motivationMail)
        {
            base.AddObject("MotivationMail", motivationMail);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PersonSchoolInfo. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPersonSchoolInfo(PersonSchoolInfo personSchoolInfo)
        {
            base.AddObject("PersonSchoolInfo", personSchoolInfo);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet SchoolExitClass. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSchoolExitClass(SchoolExitClass schoolExitClass)
        {
            base.AddObject("SchoolExitClass", schoolExitClass);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PersonSportQualification. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPersonSportQualification(PersonSportQualification personSportQualification)
        {
            base.AddObject("PersonSportQualification", personSportQualification);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet SportQualification. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSportQualification(SportQualification sportQualification)
        {
            base.AddObject("SportQualification", sportQualification);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Person_SPOSchoolExitClass. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPerson_SPOSchoolExitClass(Person_SPOSchoolExitClass person_SPOSchoolExitClass)
        {
            base.AddObject("Person_SPOSchoolExitClass", person_SPOSchoolExitClass);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet RectorScholarshipApplication. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRectorScholarshipApplication(RectorScholarshipApplication rectorScholarshipApplication)
        {
            base.AddObject("RectorScholarshipApplication", rectorScholarshipApplication);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet RectorScholarshipApplicationFile. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRectorScholarshipApplicationFile(RectorScholarshipApplicationFile rectorScholarshipApplicationFile)
        {
            base.AddObject("RectorScholarshipApplicationFile", rectorScholarshipApplicationFile);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet EgeCertificate. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToEgeCertificate(EgeCertificate egeCertificate)
        {
            base.AddObject("EgeCertificate", egeCertificate);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet EgeExam. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToEgeExam(EgeExam egeExam)
        {
            base.AddObject("EgeExam", egeExam);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet EgeMark. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToEgeMark(EgeMark egeMark)
        {
            base.AddObject("EgeMark", egeMark);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet VuzAdditionalType. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToVuzAdditionalType(VuzAdditionalType vuzAdditionalType)
        {
            base.AddObject("VuzAdditionalType", vuzAdditionalType);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PersonEducationDocument. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPersonEducationDocument(PersonEducationDocument personEducationDocument)
        {
            base.AddObject("PersonEducationDocument", personEducationDocument);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ReturnDocumentType. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToReturnDocumentType(ReturnDocumentType returnDocumentType)
        {
            base.AddObject("ReturnDocumentType", returnDocumentType);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet OlympBook. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOlympBook(OlympBook olympBook)
        {
            base.AddObject("OlympBook", olympBook);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Olympiads. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOlympiads(Olympiads olympiads)
        {
            base.AddObject("Olympiads", olympiads);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet OlympName. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOlympName(OlympName olympName)
        {
            base.AddObject("OlympName", olympName);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet OlympSubject. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOlympSubject(OlympSubject olympSubject)
        {
            base.AddObject("OlympSubject", olympSubject);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet OlympType. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOlympType(OlympType olympType)
        {
            base.AddObject("OlympType", olympType);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet OlympValue. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOlympValue(OlympValue olympValue)
        {
            base.AddObject("OlympValue", olympValue);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet OlympLevel. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOlympLevel(OlympLevel olympLevel)
        {
            base.AddObject("OlympLevel", olympLevel);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="Abiturient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Abiturient : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Abiturient.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="barcode">Исходное значение свойства Barcode.</param>
        /// <param name="hostelEduc">Исходное значение свойства HostelEduc.</param>
        /// <param name="isImported">Исходное значение свойства IsImported.</param>
        public static Abiturient CreateAbiturient(global::System.Guid id, global::System.Int32 barcode, global::System.Boolean hostelEduc, global::System.Boolean isImported)
        {
            Abiturient abiturient = new Abiturient();
            abiturient.Id = id;
            abiturient.Barcode = barcode;
            abiturient.HostelEduc = hostelEduc;
            abiturient.IsImported = isImported;
            return abiturient;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PersonId;
        partial void OnPersonIdChanging(Nullable<global::System.Guid> value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private Nullable<global::System.Int32> _Priority;
        partial void OnPriorityChanging(Nullable<global::System.Int32> value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Barcode
        {
            get
            {
                return _Barcode;
            }
            set
            {
                if (_Barcode != value)
                {
                    OnBarcodeChanging(value);
                    ReportPropertyChanging("Barcode");
                    _Barcode = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Barcode");
                    OnBarcodeChanged();
                }
            }
        }
        private global::System.Int32 _Barcode;
        partial void OnBarcodeChanging(global::System.Int32 value);
        partial void OnBarcodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private Nullable<global::System.Boolean> _Enabled;
        partial void OnEnabledChanging(Nullable<global::System.Boolean> value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EntryType
        {
            get
            {
                return _EntryType;
            }
            set
            {
                OnEntryTypeChanging(value);
                ReportPropertyChanging("EntryType");
                _EntryType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryType");
                OnEntryTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _EntryType;
        partial void OnEntryTypeChanging(Nullable<global::System.Int32> value);
        partial void OnEntryTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HostelEduc
        {
            get
            {
                return _HostelEduc;
            }
            set
            {
                if (_HostelEduc != value)
                {
                    OnHostelEducChanging(value);
                    ReportPropertyChanging("HostelEduc");
                    _HostelEduc = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HostelEduc");
                    OnHostelEducChanged();
                }
            }
        }
        private global::System.Boolean _HostelEduc;
        partial void OnHostelEducChanging(global::System.Boolean value);
        partial void OnHostelEducChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfDisable
        {
            get
            {
                return _DateOfDisable;
            }
            set
            {
                OnDateOfDisableChanging(value);
                ReportPropertyChanging("DateOfDisable");
                _DateOfDisable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfDisable");
                OnDateOfDisableChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfDisable;
        partial void OnDateOfDisableChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfDisableChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfStart
        {
            get
            {
                return _DateOfStart;
            }
            set
            {
                OnDateOfStartChanging(value);
                ReportPropertyChanging("DateOfStart");
                _DateOfStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfStart");
                OnDateOfStartChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfStart;
        partial void OnDateOfStartChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfStartChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> EntryId
        {
            get
            {
                return _EntryId;
            }
            set
            {
                OnEntryIdChanging(value);
                ReportPropertyChanging("EntryId");
                _EntryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryId");
                OnEntryIdChanged();
            }
        }
        private Nullable<global::System.Guid> _EntryId;
        partial void OnEntryIdChanging(Nullable<global::System.Guid> value);
        partial void OnEntryIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> StudyPlanId
        {
            get
            {
                return _StudyPlanId;
            }
            set
            {
                OnStudyPlanIdChanging(value);
                ReportPropertyChanging("StudyPlanId");
                _StudyPlanId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudyPlanId");
                OnStudyPlanIdChanged();
            }
        }
        private Nullable<global::System.Guid> _StudyPlanId;
        partial void OnStudyPlanIdChanging(Nullable<global::System.Guid> value);
        partial void OnStudyPlanIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StudyPlanNumber
        {
            get
            {
                return _StudyPlanNumber;
            }
            set
            {
                OnStudyPlanNumberChanging(value);
                ReportPropertyChanging("StudyPlanNumber");
                _StudyPlanNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StudyPlanNumber");
                OnStudyPlanNumberChanged();
            }
        }
        private global::System.String _StudyPlanNumber;
        partial void OnStudyPlanNumberChanging(global::System.String value);
        partial void OnStudyPlanNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FacultyId
        {
            get
            {
                return _FacultyId;
            }
            set
            {
                OnFacultyIdChanging(value);
                ReportPropertyChanging("FacultyId");
                _FacultyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacultyId");
                OnFacultyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FacultyId;
        partial void OnFacultyIdChanging(Nullable<global::System.Int32> value);
        partial void OnFacultyIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FacultyName
        {
            get
            {
                return _FacultyName;
            }
            set
            {
                OnFacultyNameChanging(value);
                ReportPropertyChanging("FacultyName");
                _FacultyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FacultyName");
                OnFacultyNameChanged();
            }
        }
        private global::System.String _FacultyName;
        partial void OnFacultyNameChanging(global::System.String value);
        partial void OnFacultyNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LicenseProgramId
        {
            get
            {
                return _LicenseProgramId;
            }
            set
            {
                OnLicenseProgramIdChanging(value);
                ReportPropertyChanging("LicenseProgramId");
                _LicenseProgramId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseProgramId");
                OnLicenseProgramIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LicenseProgramId;
        partial void OnLicenseProgramIdChanging(Nullable<global::System.Int32> value);
        partial void OnLicenseProgramIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LicenseProgramCode
        {
            get
            {
                return _LicenseProgramCode;
            }
            set
            {
                OnLicenseProgramCodeChanging(value);
                ReportPropertyChanging("LicenseProgramCode");
                _LicenseProgramCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LicenseProgramCode");
                OnLicenseProgramCodeChanged();
            }
        }
        private global::System.String _LicenseProgramCode;
        partial void OnLicenseProgramCodeChanging(global::System.String value);
        partial void OnLicenseProgramCodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LicenseProgramName
        {
            get
            {
                return _LicenseProgramName;
            }
            set
            {
                OnLicenseProgramNameChanging(value);
                ReportPropertyChanging("LicenseProgramName");
                _LicenseProgramName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LicenseProgramName");
                OnLicenseProgramNameChanged();
            }
        }
        private global::System.String _LicenseProgramName;
        partial void OnLicenseProgramNameChanging(global::System.String value);
        partial void OnLicenseProgramNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ObrazProgramId
        {
            get
            {
                return _ObrazProgramId;
            }
            set
            {
                OnObrazProgramIdChanging(value);
                ReportPropertyChanging("ObrazProgramId");
                _ObrazProgramId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObrazProgramId");
                OnObrazProgramIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ObrazProgramId;
        partial void OnObrazProgramIdChanging(Nullable<global::System.Int32> value);
        partial void OnObrazProgramIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ObrazProgramCrypt
        {
            get
            {
                return _ObrazProgramCrypt;
            }
            set
            {
                OnObrazProgramCryptChanging(value);
                ReportPropertyChanging("ObrazProgramCrypt");
                _ObrazProgramCrypt = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ObrazProgramCrypt");
                OnObrazProgramCryptChanged();
            }
        }
        private global::System.String _ObrazProgramCrypt;
        partial void OnObrazProgramCryptChanging(global::System.String value);
        partial void OnObrazProgramCryptChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ObrazProgramName
        {
            get
            {
                return _ObrazProgramName;
            }
            set
            {
                OnObrazProgramNameChanging(value);
                ReportPropertyChanging("ObrazProgramName");
                _ObrazProgramName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ObrazProgramName");
                OnObrazProgramNameChanged();
            }
        }
        private global::System.String _ObrazProgramName;
        partial void OnObrazProgramNameChanging(global::System.String value);
        partial void OnObrazProgramNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ProfileId
        {
            get
            {
                return _ProfileId;
            }
            set
            {
                OnProfileIdChanging(value);
                ReportPropertyChanging("ProfileId");
                _ProfileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileId");
                OnProfileIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ProfileId;
        partial void OnProfileIdChanging(Nullable<global::System.Guid> value);
        partial void OnProfileIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProfileName
        {
            get
            {
                return _ProfileName;
            }
            set
            {
                OnProfileNameChanging(value);
                ReportPropertyChanging("ProfileName");
                _ProfileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProfileName");
                OnProfileNameChanged();
            }
        }
        private global::System.String _ProfileName;
        partial void OnProfileNameChanging(global::System.String value);
        partial void OnProfileNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StudyBasisId
        {
            get
            {
                return _StudyBasisId;
            }
            set
            {
                OnStudyBasisIdChanging(value);
                ReportPropertyChanging("StudyBasisId");
                _StudyBasisId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudyBasisId");
                OnStudyBasisIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StudyBasisId;
        partial void OnStudyBasisIdChanging(Nullable<global::System.Int32> value);
        partial void OnStudyBasisIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StudyBasisName
        {
            get
            {
                return _StudyBasisName;
            }
            set
            {
                OnStudyBasisNameChanging(value);
                ReportPropertyChanging("StudyBasisName");
                _StudyBasisName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StudyBasisName");
                OnStudyBasisNameChanged();
            }
        }
        private global::System.String _StudyBasisName;
        partial void OnStudyBasisNameChanging(global::System.String value);
        partial void OnStudyBasisNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StudyFormId
        {
            get
            {
                return _StudyFormId;
            }
            set
            {
                OnStudyFormIdChanging(value);
                ReportPropertyChanging("StudyFormId");
                _StudyFormId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudyFormId");
                OnStudyFormIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StudyFormId;
        partial void OnStudyFormIdChanging(Nullable<global::System.Int32> value);
        partial void OnStudyFormIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StudyFormName
        {
            get
            {
                return _StudyFormName;
            }
            set
            {
                OnStudyFormNameChanging(value);
                ReportPropertyChanging("StudyFormName");
                _StudyFormName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StudyFormName");
                OnStudyFormNameChanged();
            }
        }
        private global::System.String _StudyFormName;
        partial void OnStudyFormNameChanging(global::System.String value);
        partial void OnStudyFormNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StudyLevelId
        {
            get
            {
                return _StudyLevelId;
            }
            set
            {
                OnStudyLevelIdChanging(value);
                ReportPropertyChanging("StudyLevelId");
                _StudyLevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudyLevelId");
                OnStudyLevelIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StudyLevelId;
        partial void OnStudyLevelIdChanging(Nullable<global::System.Int32> value);
        partial void OnStudyLevelIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StudyLevelName
        {
            get
            {
                return _StudyLevelName;
            }
            set
            {
                OnStudyLevelNameChanging(value);
                ReportPropertyChanging("StudyLevelName");
                _StudyLevelName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StudyLevelName");
                OnStudyLevelNameChanged();
            }
        }
        private global::System.String _StudyLevelName;
        partial void OnStudyLevelNameChanging(global::System.String value);
        partial void OnStudyLevelNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> SeparateEntryProfileInSPId
        {
            get
            {
                return _SeparateEntryProfileInSPId;
            }
            set
            {
                OnSeparateEntryProfileInSPIdChanging(value);
                ReportPropertyChanging("SeparateEntryProfileInSPId");
                _SeparateEntryProfileInSPId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeparateEntryProfileInSPId");
                OnSeparateEntryProfileInSPIdChanged();
            }
        }
        private Nullable<global::System.Guid> _SeparateEntryProfileInSPId;
        partial void OnSeparateEntryProfileInSPIdChanging(Nullable<global::System.Guid> value);
        partial void OnSeparateEntryProfileInSPIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsApprovedByComission
        {
            get
            {
                return _IsApprovedByComission;
            }
            set
            {
                OnIsApprovedByComissionChanging(value);
                ReportPropertyChanging("IsApprovedByComission");
                _IsApprovedByComission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApprovedByComission");
                OnIsApprovedByComissionChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsApprovedByComission;
        partial void OnIsApprovedByComissionChanging(Nullable<global::System.Boolean> value);
        partial void OnIsApprovedByComissionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsImported
        {
            get
            {
                return _IsImported;
            }
            set
            {
                if (_IsImported != value)
                {
                    OnIsImportedChanging(value);
                    ReportPropertyChanging("IsImported");
                    _IsImported = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsImported");
                    OnIsImportedChanged();
                }
            }
        }
        private global::System.Boolean _IsImported;
        partial void OnIsImportedChanging(global::System.Boolean value);
        partial void OnIsImportedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SecondTypeId
        {
            get
            {
                return _SecondTypeId;
            }
            set
            {
                OnSecondTypeIdChanging(value);
                ReportPropertyChanging("SecondTypeId");
                _SecondTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecondTypeId");
                OnSecondTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SecondTypeId;
        partial void OnSecondTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnSecondTypeIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSecond
        {
            get
            {
                return _IsSecond;
            }
            set
            {
                OnIsSecondChanging(value);
                ReportPropertyChanging("IsSecond");
                _IsSecond = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSecond");
                OnIsSecondChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSecond;
        partial void OnIsSecondChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSecondChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsReduced
        {
            get
            {
                return _IsReduced;
            }
            set
            {
                OnIsReducedChanging(value);
                ReportPropertyChanging("IsReduced");
                _IsReduced = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsReduced");
                OnIsReducedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsReduced;
        partial void OnIsReducedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsReducedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateReviewDocs
        {
            get
            {
                return _DateReviewDocs;
            }
            set
            {
                OnDateReviewDocsChanging(value);
                ReportPropertyChanging("DateReviewDocs");
                _DateReviewDocs = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateReviewDocs");
                OnDateReviewDocsChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateReviewDocs;
        partial void OnDateReviewDocsChanging(Nullable<global::System.DateTime> value);
        partial void OnDateReviewDocsChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SemesterId
        {
            get
            {
                return _SemesterId;
            }
            set
            {
                OnSemesterIdChanging(value);
                ReportPropertyChanging("SemesterId");
                _SemesterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SemesterId");
                OnSemesterIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SemesterId;
        partial void OnSemesterIdChanging(Nullable<global::System.Int32> value);
        partial void OnSemesterIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsParallel
        {
            get
            {
                return _IsParallel;
            }
            set
            {
                OnIsParallelChanging(value);
                ReportPropertyChanging("IsParallel");
                _IsParallel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsParallel");
                OnIsParallelChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsParallel;
        partial void OnIsParallelChanging(Nullable<global::System.Boolean> value);
        partial void OnIsParallelChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfClose
        {
            get
            {
                return _DateOfClose;
            }
            set
            {
                OnDateOfCloseChanging(value);
                ReportPropertyChanging("DateOfClose");
                _DateOfClose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfClose");
                OnDateOfCloseChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfClose;
        partial void OnDateOfCloseChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfCloseChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CampaignYear
        {
            get
            {
                return _CampaignYear;
            }
            set
            {
                OnCampaignYearChanging(value);
                ReportPropertyChanging("CampaignYear");
                _CampaignYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CampaignYear");
                OnCampaignYearChanged();
            }
        }
        private Nullable<global::System.Int32> _CampaignYear;
        partial void OnCampaignYearChanging(Nullable<global::System.Int32> value);
        partial void OnCampaignYearChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ObrazProgramNameEng
        {
            get
            {
                return _ObrazProgramNameEng;
            }
            set
            {
                OnObrazProgramNameEngChanging(value);
                ReportPropertyChanging("ObrazProgramNameEng");
                _ObrazProgramNameEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ObrazProgramNameEng");
                OnObrazProgramNameEngChanged();
            }
        }
        private global::System.String _ObrazProgramNameEng;
        partial void OnObrazProgramNameEngChanging(global::System.String value);
        partial void OnObrazProgramNameEngChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LicenseProgramNameEng
        {
            get
            {
                return _LicenseProgramNameEng;
            }
            set
            {
                OnLicenseProgramNameEngChanging(value);
                ReportPropertyChanging("LicenseProgramNameEng");
                _LicenseProgramNameEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LicenseProgramNameEng");
                OnLicenseProgramNameEngChanged();
            }
        }
        private global::System.String _LicenseProgramNameEng;
        partial void OnLicenseProgramNameEngChanging(global::System.String value);
        partial void OnLicenseProgramNameEngChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProfileNameEng
        {
            get
            {
                return _ProfileNameEng;
            }
            set
            {
                OnProfileNameEngChanging(value);
                ReportPropertyChanging("ProfileNameEng");
                _ProfileNameEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProfileNameEng");
                OnProfileNameEngChanged();
            }
        }
        private global::System.String _ProfileNameEng;
        partial void OnProfileNameEngChanging(global::System.String value);
        partial void OnProfileNameEngChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StudyBasisNameEng
        {
            get
            {
                return _StudyBasisNameEng;
            }
            set
            {
                OnStudyBasisNameEngChanging(value);
                ReportPropertyChanging("StudyBasisNameEng");
                _StudyBasisNameEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StudyBasisNameEng");
                OnStudyBasisNameEngChanged();
            }
        }
        private global::System.String _StudyBasisNameEng;
        partial void OnStudyBasisNameEngChanging(global::System.String value);
        partial void OnStudyBasisNameEngChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StudyFormNameEng
        {
            get
            {
                return _StudyFormNameEng;
            }
            set
            {
                OnStudyFormNameEngChanging(value);
                ReportPropertyChanging("StudyFormNameEng");
                _StudyFormNameEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StudyFormNameEng");
                OnStudyFormNameEngChanged();
            }
        }
        private global::System.String _StudyFormNameEng;
        partial void OnStudyFormNameEngChanging(global::System.String value);
        partial void OnStudyFormNameEngChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="AbiturientType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AbiturientType : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта AbiturientType.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static AbiturientType CreateAbiturientType(global::System.Int32 id)
        {
            AbiturientType abiturientType = new AbiturientType();
            abiturientType.Id = id;
            return abiturientType;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Multiplier
        {
            get
            {
                return _Multiplier;
            }
            set
            {
                OnMultiplierChanging(value);
                ReportPropertyChanging("Multiplier");
                _Multiplier = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Multiplier");
                OnMultiplierChanged();
            }
        }
        private Nullable<global::System.Int32> _Multiplier;
        partial void OnMultiplierChanging(Nullable<global::System.Int32> value);
        partial void OnMultiplierChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="Application")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Application : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Application.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="priority">Исходное значение свойства Priority.</param>
        /// <param name="barcode">Исходное значение свойства Barcode.</param>
        /// <param name="hostelEduc">Исходное значение свойства HostelEduc.</param>
        public static Application CreateApplication(global::System.Guid id, global::System.Int32 priority, global::System.Int32 barcode, global::System.Boolean hostelEduc)
        {
            Application application = new Application();
            application.Id = id;
            application.Priority = priority;
            application.Barcode = barcode;
            application.HostelEduc = hostelEduc;
            return application;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PersonId;
        partial void OnPersonIdChanging(Nullable<global::System.Guid> value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Barcode
        {
            get
            {
                return _Barcode;
            }
            set
            {
                OnBarcodeChanging(value);
                ReportPropertyChanging("Barcode");
                _Barcode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Barcode");
                OnBarcodeChanged();
            }
        }
        private global::System.Int32 _Barcode;
        partial void OnBarcodeChanging(global::System.Int32 value);
        partial void OnBarcodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private Nullable<global::System.Boolean> _Enabled;
        partial void OnEnabledChanging(Nullable<global::System.Boolean> value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EntryType
        {
            get
            {
                return _EntryType;
            }
            set
            {
                OnEntryTypeChanging(value);
                ReportPropertyChanging("EntryType");
                _EntryType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryType");
                OnEntryTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _EntryType;
        partial void OnEntryTypeChanging(Nullable<global::System.Int32> value);
        partial void OnEntryTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HostelEduc
        {
            get
            {
                return _HostelEduc;
            }
            set
            {
                OnHostelEducChanging(value);
                ReportPropertyChanging("HostelEduc");
                _HostelEduc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HostelEduc");
                OnHostelEducChanged();
            }
        }
        private global::System.Boolean _HostelEduc;
        partial void OnHostelEducChanging(global::System.Boolean value);
        partial void OnHostelEducChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfDisable
        {
            get
            {
                return _DateOfDisable;
            }
            set
            {
                OnDateOfDisableChanging(value);
                ReportPropertyChanging("DateOfDisable");
                _DateOfDisable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfDisable");
                OnDateOfDisableChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfDisable;
        partial void OnDateOfDisableChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfDisableChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> EntryId
        {
            get
            {
                return _EntryId;
            }
            set
            {
                OnEntryIdChanging(value);
                ReportPropertyChanging("EntryId");
                _EntryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryId");
                OnEntryIdChanged();
            }
        }
        private Nullable<global::System.Guid> _EntryId;
        partial void OnEntryIdChanging(Nullable<global::System.Guid> value);
        partial void OnEntryIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfStart
        {
            get
            {
                return _DateOfStart;
            }
            set
            {
                OnDateOfStartChanging(value);
                ReportPropertyChanging("DateOfStart");
                _DateOfStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfStart");
                OnDateOfStartChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfStart;
        partial void OnDateOfStartChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfStartChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsApprovedByComission
        {
            get
            {
                return _IsApprovedByComission;
            }
            set
            {
                OnIsApprovedByComissionChanging(value);
                ReportPropertyChanging("IsApprovedByComission");
                _IsApprovedByComission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApprovedByComission");
                OnIsApprovedByComissionChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsApprovedByComission;
        partial void OnIsApprovedByComissionChanging(Nullable<global::System.Boolean> value);
        partial void OnIsApprovedByComissionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsImported
        {
            get
            {
                return _IsImported;
            }
            set
            {
                OnIsImportedChanging(value);
                ReportPropertyChanging("IsImported");
                _IsImported = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsImported");
                OnIsImportedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsImported;
        partial void OnIsImportedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsImportedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SecondTypeId
        {
            get
            {
                return _SecondTypeId;
            }
            set
            {
                OnSecondTypeIdChanging(value);
                ReportPropertyChanging("SecondTypeId");
                _SecondTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecondTypeId");
                OnSecondTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SecondTypeId;
        partial void OnSecondTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnSecondTypeIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateReviewDocs
        {
            get
            {
                return _DateReviewDocs;
            }
            set
            {
                OnDateReviewDocsChanging(value);
                ReportPropertyChanging("DateReviewDocs");
                _DateReviewDocs = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateReviewDocs");
                OnDateReviewDocsChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateReviewDocs;
        partial void OnDateReviewDocsChanging(Nullable<global::System.DateTime> value);
        partial void OnDateReviewDocsChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Application_Entry", "Entry")]
        public Entry Entry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entry>("OnlinePriem2012Model.FK_Application_Entry", "Entry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entry>("OnlinePriem2012Model.FK_Application_Entry", "Entry").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Entry> EntryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entry>("OnlinePriem2012Model.FK_Application_Entry", "Entry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Entry>("OnlinePriem2012Model.FK_Application_Entry", "Entry", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Application_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_Application_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_Application_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_Application_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("OnlinePriem2012Model.FK_Application_Person", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Country.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="isCountry">Исходное значение свойства IsCountry.</param>
        /// <param name="isNationality">Исходное значение свойства IsNationality.</param>
        public static Country CreateCountry(global::System.Int32 id, global::System.Boolean isCountry, global::System.Boolean isNationality)
        {
            Country country = new Country();
            country.Id = id;
            country.IsCountry = isCountry;
            country.IsNationality = isNationality;
            return country;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameEng
        {
            get
            {
                return _NameEng;
            }
            set
            {
                OnNameEngChanging(value);
                ReportPropertyChanging("NameEng");
                _NameEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NameEng");
                OnNameEngChanged();
            }
        }
        private global::System.String _NameEng;
        partial void OnNameEngChanging(global::System.String value);
        partial void OnNameEngChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegionId
        {
            get
            {
                return _RegionId;
            }
            set
            {
                OnRegionIdChanging(value);
                ReportPropertyChanging("RegionId");
                _RegionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionId");
                OnRegionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RegionId;
        partial void OnRegionIdChanging(Nullable<global::System.Int32> value);
        partial void OnRegionIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelOfUsing
        {
            get
            {
                return _LevelOfUsing;
            }
            set
            {
                OnLevelOfUsingChanging(value);
                ReportPropertyChanging("LevelOfUsing");
                _LevelOfUsing = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelOfUsing");
                OnLevelOfUsingChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelOfUsing;
        partial void OnLevelOfUsingChanging(Nullable<global::System.Int32> value);
        partial void OnLevelOfUsingChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PriemDictionaryId
        {
            get
            {
                return _PriemDictionaryId;
            }
            set
            {
                OnPriemDictionaryIdChanging(value);
                ReportPropertyChanging("PriemDictionaryId");
                _PriemDictionaryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriemDictionaryId");
                OnPriemDictionaryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PriemDictionaryId;
        partial void OnPriemDictionaryIdChanging(Nullable<global::System.Int32> value);
        partial void OnPriemDictionaryIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCountry
        {
            get
            {
                return _IsCountry;
            }
            set
            {
                OnIsCountryChanging(value);
                ReportPropertyChanging("IsCountry");
                _IsCountry = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCountry");
                OnIsCountryChanged();
            }
        }
        private global::System.Boolean _IsCountry;
        partial void OnIsCountryChanging(global::System.Boolean value);
        partial void OnIsCountryChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsNationality
        {
            get
            {
                return _IsNationality;
            }
            set
            {
                OnIsNationalityChanging(value);
                ReportPropertyChanging("IsNationality");
                _IsNationality = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNationality");
                OnIsNationalityChanged();
            }
        }
        private global::System.Boolean _IsNationality;
        partial void OnIsNationalityChanging(global::System.Boolean value);
        partial void OnIsNationalityChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonContacts_Country", "PersonContacts")]
        public EntityCollection<PersonContacts> PersonContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonContacts>("OnlinePriem2012Model.FK_PersonContacts_Country", "PersonContacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonContacts>("OnlinePriem2012Model.FK_PersonContacts_Country", "PersonContacts", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Person_ForeignCountry", "Person")]
        public EntityCollection<Person> Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("OnlinePriem2012Model.FK_Person_ForeignCountry", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("OnlinePriem2012Model.FK_Person_ForeignCountry", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonEducationDocument_Country", "PersonEducationDocument")]
        public EntityCollection<PersonEducationDocument> PersonEducationDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonEducationDocument>("OnlinePriem2012Model.FK_PersonEducationDocument_Country", "PersonEducationDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonEducationDocument>("OnlinePriem2012Model.FK_PersonEducationDocument_Country", "PersonEducationDocument", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="EgeCertificate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EgeCertificate : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта EgeCertificate.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="is2014">Исходное значение свойства Is2014.</param>
        public static EgeCertificate CreateEgeCertificate(global::System.Guid id, global::System.Boolean is2014)
        {
            EgeCertificate egeCertificate = new EgeCertificate();
            egeCertificate.Id = id;
            egeCertificate.Is2014 = is2014;
            return egeCertificate;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PersonId;
        partial void OnPersonIdChanging(Nullable<global::System.Guid> value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsGIA
        {
            get
            {
                return _IsGIA;
            }
            set
            {
                OnIsGIAChanging(value);
                ReportPropertyChanging("IsGIA");
                _IsGIA = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsGIA");
                OnIsGIAChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsGIA;
        partial void OnIsGIAChanging(Nullable<global::System.Boolean> value);
        partial void OnIsGIAChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Is2014
        {
            get
            {
                return _Is2014;
            }
            set
            {
                OnIs2014Changing(value);
                ReportPropertyChanging("Is2014");
                _Is2014 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Is2014");
                OnIs2014Changed();
            }
        }
        private global::System.Boolean _Is2014;
        partial void OnIs2014Changing(global::System.Boolean value);
        partial void OnIs2014Changed();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_EgeMark_EgeCertificate", "EgeMark")]
        public EntityCollection<EgeMark> EgeMark
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EgeMark>("OnlinePriem2012Model.FK_EgeMark_EgeCertificate", "EgeMark");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EgeMark>("OnlinePriem2012Model.FK_EgeMark_EgeCertificate", "EgeMark", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="EgeExam")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EgeExam : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта EgeExam.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static EgeExam CreateEgeExam(global::System.Int32 id)
        {
            EgeExam egeExam = new EgeExam();
            egeExam.Id = id;
            return egeExam;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_EgeMark_EgeExam", "EgeMark")]
        public EntityCollection<EgeMark> EgeMark
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EgeMark>("OnlinePriem2012Model.FK_EgeMark_EgeExam", "EgeMark");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EgeMark>("OnlinePriem2012Model.FK_EgeMark_EgeExam", "EgeMark", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="EgeMark")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EgeMark : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта EgeMark.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="isInUniversity">Исходное значение свойства IsInUniversity.</param>
        /// <param name="isSecondWave">Исходное значение свойства IsSecondWave.</param>
        public static EgeMark CreateEgeMark(global::System.Guid id, global::System.Boolean isInUniversity, global::System.Boolean isSecondWave)
        {
            EgeMark egeMark = new EgeMark();
            egeMark.Id = id;
            egeMark.IsInUniversity = isInUniversity;
            egeMark.IsSecondWave = isSecondWave;
            return egeMark;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> EgeCertificateId
        {
            get
            {
                return _EgeCertificateId;
            }
            set
            {
                OnEgeCertificateIdChanging(value);
                ReportPropertyChanging("EgeCertificateId");
                _EgeCertificateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EgeCertificateId");
                OnEgeCertificateIdChanged();
            }
        }
        private Nullable<global::System.Guid> _EgeCertificateId;
        partial void OnEgeCertificateIdChanging(Nullable<global::System.Guid> value);
        partial void OnEgeCertificateIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EgeExamId
        {
            get
            {
                return _EgeExamId;
            }
            set
            {
                OnEgeExamIdChanging(value);
                ReportPropertyChanging("EgeExamId");
                _EgeExamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EgeExamId");
                OnEgeExamIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EgeExamId;
        partial void OnEgeExamIdChanging(Nullable<global::System.Int32> value);
        partial void OnEgeExamIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private Nullable<global::System.Int32> _Value;
        partial void OnValueChanging(Nullable<global::System.Int32> value);
        partial void OnValueChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsInUniversity
        {
            get
            {
                return _IsInUniversity;
            }
            set
            {
                OnIsInUniversityChanging(value);
                ReportPropertyChanging("IsInUniversity");
                _IsInUniversity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsInUniversity");
                OnIsInUniversityChanged();
            }
        }
        private global::System.Boolean _IsInUniversity;
        partial void OnIsInUniversityChanging(global::System.Boolean value);
        partial void OnIsInUniversityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSecondWave
        {
            get
            {
                return _IsSecondWave;
            }
            set
            {
                OnIsSecondWaveChanging(value);
                ReportPropertyChanging("IsSecondWave");
                _IsSecondWave = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSecondWave");
                OnIsSecondWaveChanged();
            }
        }
        private global::System.Boolean _IsSecondWave;
        partial void OnIsSecondWaveChanging(global::System.Boolean value);
        partial void OnIsSecondWaveChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_EgeMark_EgeCertificate", "EgeCertificate")]
        public EgeCertificate EgeCertificate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EgeCertificate>("OnlinePriem2012Model.FK_EgeMark_EgeCertificate", "EgeCertificate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EgeCertificate>("OnlinePriem2012Model.FK_EgeMark_EgeCertificate", "EgeCertificate").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EgeCertificate> EgeCertificateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EgeCertificate>("OnlinePriem2012Model.FK_EgeMark_EgeCertificate", "EgeCertificate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EgeCertificate>("OnlinePriem2012Model.FK_EgeMark_EgeCertificate", "EgeCertificate", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_EgeMark_EgeExam", "EgeExam")]
        public EgeExam EgeExam
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EgeExam>("OnlinePriem2012Model.FK_EgeMark_EgeExam", "EgeExam").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EgeExam>("OnlinePriem2012Model.FK_EgeMark_EgeExam", "EgeExam").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EgeExam> EgeExamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EgeExam>("OnlinePriem2012Model.FK_EgeMark_EgeExam", "EgeExam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EgeExam>("OnlinePriem2012Model.FK_EgeMark_EgeExam", "EgeExam", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="Entry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Entry : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Entry.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="studyLevelId">Исходное значение свойства StudyLevelId.</param>
        /// <param name="isSecond">Исходное значение свойства IsSecond.</param>
        /// <param name="isReduced">Исходное значение свойства IsReduced.</param>
        /// <param name="isParallel">Исходное значение свойства IsParallel.</param>
        /// <param name="isExpress">Исходное значение свойства IsExpress.</param>
        /// <param name="isElectronic">Исходное значение свойства IsElectronic.</param>
        /// <param name="isDistance">Исходное значение свойства IsDistance.</param>
        /// <param name="isUsedForPriem">Исходное значение свойства IsUsedForPriem.</param>
        public static Entry CreateEntry(global::System.Guid id, global::System.Int32 studyLevelId, global::System.Boolean isSecond, global::System.Boolean isReduced, global::System.Boolean isParallel, global::System.Boolean isExpress, global::System.Boolean isElectronic, global::System.Boolean isDistance, global::System.Boolean isUsedForPriem)
        {
            Entry entry = new Entry();
            entry.Id = id;
            entry.StudyLevelId = studyLevelId;
            entry.IsSecond = isSecond;
            entry.IsReduced = isReduced;
            entry.IsParallel = isParallel;
            entry.IsExpress = isExpress;
            entry.IsElectronic = isElectronic;
            entry.IsDistance = isDistance;
            entry.IsUsedForPriem = isUsedForPriem;
            return entry;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SemesterId
        {
            get
            {
                return _SemesterId;
            }
            set
            {
                OnSemesterIdChanging(value);
                ReportPropertyChanging("SemesterId");
                _SemesterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SemesterId");
                OnSemesterIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SemesterId;
        partial void OnSemesterIdChanging(Nullable<global::System.Int32> value);
        partial void OnSemesterIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> StudyPlanId
        {
            get
            {
                return _StudyPlanId;
            }
            set
            {
                OnStudyPlanIdChanging(value);
                ReportPropertyChanging("StudyPlanId");
                _StudyPlanId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudyPlanId");
                OnStudyPlanIdChanged();
            }
        }
        private Nullable<global::System.Guid> _StudyPlanId;
        partial void OnStudyPlanIdChanging(Nullable<global::System.Guid> value);
        partial void OnStudyPlanIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StudyPlanNumber
        {
            get
            {
                return _StudyPlanNumber;
            }
            set
            {
                OnStudyPlanNumberChanging(value);
                ReportPropertyChanging("StudyPlanNumber");
                _StudyPlanNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StudyPlanNumber");
                OnStudyPlanNumberChanged();
            }
        }
        private global::System.String _StudyPlanNumber;
        partial void OnStudyPlanNumberChanging(global::System.String value);
        partial void OnStudyPlanNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FacultyId
        {
            get
            {
                return _FacultyId;
            }
            set
            {
                OnFacultyIdChanging(value);
                ReportPropertyChanging("FacultyId");
                _FacultyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacultyId");
                OnFacultyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FacultyId;
        partial void OnFacultyIdChanging(Nullable<global::System.Int32> value);
        partial void OnFacultyIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FacultyName
        {
            get
            {
                return _FacultyName;
            }
            set
            {
                OnFacultyNameChanging(value);
                ReportPropertyChanging("FacultyName");
                _FacultyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FacultyName");
                OnFacultyNameChanged();
            }
        }
        private global::System.String _FacultyName;
        partial void OnFacultyNameChanging(global::System.String value);
        partial void OnFacultyNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LicenseProgramId
        {
            get
            {
                return _LicenseProgramId;
            }
            set
            {
                OnLicenseProgramIdChanging(value);
                ReportPropertyChanging("LicenseProgramId");
                _LicenseProgramId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseProgramId");
                OnLicenseProgramIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LicenseProgramId;
        partial void OnLicenseProgramIdChanging(Nullable<global::System.Int32> value);
        partial void OnLicenseProgramIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LicenseProgramName
        {
            get
            {
                return _LicenseProgramName;
            }
            set
            {
                OnLicenseProgramNameChanging(value);
                ReportPropertyChanging("LicenseProgramName");
                _LicenseProgramName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LicenseProgramName");
                OnLicenseProgramNameChanged();
            }
        }
        private global::System.String _LicenseProgramName;
        partial void OnLicenseProgramNameChanging(global::System.String value);
        partial void OnLicenseProgramNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LicenseProgramCode
        {
            get
            {
                return _LicenseProgramCode;
            }
            set
            {
                OnLicenseProgramCodeChanging(value);
                ReportPropertyChanging("LicenseProgramCode");
                _LicenseProgramCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LicenseProgramCode");
                OnLicenseProgramCodeChanged();
            }
        }
        private global::System.String _LicenseProgramCode;
        partial void OnLicenseProgramCodeChanging(global::System.String value);
        partial void OnLicenseProgramCodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ObrazProgramId
        {
            get
            {
                return _ObrazProgramId;
            }
            set
            {
                OnObrazProgramIdChanging(value);
                ReportPropertyChanging("ObrazProgramId");
                _ObrazProgramId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObrazProgramId");
                OnObrazProgramIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ObrazProgramId;
        partial void OnObrazProgramIdChanging(Nullable<global::System.Int32> value);
        partial void OnObrazProgramIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ObrazProgramName
        {
            get
            {
                return _ObrazProgramName;
            }
            set
            {
                OnObrazProgramNameChanging(value);
                ReportPropertyChanging("ObrazProgramName");
                _ObrazProgramName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ObrazProgramName");
                OnObrazProgramNameChanged();
            }
        }
        private global::System.String _ObrazProgramName;
        partial void OnObrazProgramNameChanging(global::System.String value);
        partial void OnObrazProgramNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ObrazProgramCrypt
        {
            get
            {
                return _ObrazProgramCrypt;
            }
            set
            {
                OnObrazProgramCryptChanging(value);
                ReportPropertyChanging("ObrazProgramCrypt");
                _ObrazProgramCrypt = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ObrazProgramCrypt");
                OnObrazProgramCryptChanged();
            }
        }
        private global::System.String _ObrazProgramCrypt;
        partial void OnObrazProgramCryptChanging(global::System.String value);
        partial void OnObrazProgramCryptChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProfileName
        {
            get
            {
                return _ProfileName;
            }
            set
            {
                OnProfileNameChanging(value);
                ReportPropertyChanging("ProfileName");
                _ProfileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProfileName");
                OnProfileNameChanged();
            }
        }
        private global::System.String _ProfileName;
        partial void OnProfileNameChanging(global::System.String value);
        partial void OnProfileNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StudyBasisId
        {
            get
            {
                return _StudyBasisId;
            }
            set
            {
                OnStudyBasisIdChanging(value);
                ReportPropertyChanging("StudyBasisId");
                _StudyBasisId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudyBasisId");
                OnStudyBasisIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StudyBasisId;
        partial void OnStudyBasisIdChanging(Nullable<global::System.Int32> value);
        partial void OnStudyBasisIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StudyBasisName
        {
            get
            {
                return _StudyBasisName;
            }
            set
            {
                OnStudyBasisNameChanging(value);
                ReportPropertyChanging("StudyBasisName");
                _StudyBasisName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StudyBasisName");
                OnStudyBasisNameChanged();
            }
        }
        private global::System.String _StudyBasisName;
        partial void OnStudyBasisNameChanging(global::System.String value);
        partial void OnStudyBasisNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StudyBasisAcronym
        {
            get
            {
                return _StudyBasisAcronym;
            }
            set
            {
                OnStudyBasisAcronymChanging(value);
                ReportPropertyChanging("StudyBasisAcronym");
                _StudyBasisAcronym = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StudyBasisAcronym");
                OnStudyBasisAcronymChanged();
            }
        }
        private global::System.String _StudyBasisAcronym;
        partial void OnStudyBasisAcronymChanging(global::System.String value);
        partial void OnStudyBasisAcronymChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StudyFormId
        {
            get
            {
                return _StudyFormId;
            }
            set
            {
                OnStudyFormIdChanging(value);
                ReportPropertyChanging("StudyFormId");
                _StudyFormId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudyFormId");
                OnStudyFormIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StudyFormId;
        partial void OnStudyFormIdChanging(Nullable<global::System.Int32> value);
        partial void OnStudyFormIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StudyFormName
        {
            get
            {
                return _StudyFormName;
            }
            set
            {
                OnStudyFormNameChanging(value);
                ReportPropertyChanging("StudyFormName");
                _StudyFormName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StudyFormName");
                OnStudyFormNameChanged();
            }
        }
        private global::System.String _StudyFormName;
        partial void OnStudyFormNameChanging(global::System.String value);
        partial void OnStudyFormNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudyLevelId
        {
            get
            {
                return _StudyLevelId;
            }
            set
            {
                OnStudyLevelIdChanging(value);
                ReportPropertyChanging("StudyLevelId");
                _StudyLevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudyLevelId");
                OnStudyLevelIdChanged();
            }
        }
        private global::System.Int32 _StudyLevelId;
        partial void OnStudyLevelIdChanging(global::System.Int32 value);
        partial void OnStudyLevelIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StudyLevelName
        {
            get
            {
                return _StudyLevelName;
            }
            set
            {
                OnStudyLevelNameChanging(value);
                ReportPropertyChanging("StudyLevelName");
                _StudyLevelName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StudyLevelName");
                OnStudyLevelNameChanged();
            }
        }
        private global::System.String _StudyLevelName;
        partial void OnStudyLevelNameChanging(global::System.String value);
        partial void OnStudyLevelNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> SeparateEntryProfileInSPId
        {
            get
            {
                return _SeparateEntryProfileInSPId;
            }
            set
            {
                OnSeparateEntryProfileInSPIdChanging(value);
                ReportPropertyChanging("SeparateEntryProfileInSPId");
                _SeparateEntryProfileInSPId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeparateEntryProfileInSPId");
                OnSeparateEntryProfileInSPIdChanged();
            }
        }
        private Nullable<global::System.Guid> _SeparateEntryProfileInSPId;
        partial void OnSeparateEntryProfileInSPIdChanging(Nullable<global::System.Guid> value);
        partial void OnSeparateEntryProfileInSPIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ProfileId
        {
            get
            {
                return _ProfileId;
            }
            set
            {
                OnProfileIdChanging(value);
                ReportPropertyChanging("ProfileId");
                _ProfileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileId");
                OnProfileIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ProfileId;
        partial void OnProfileIdChanging(Nullable<global::System.Guid> value);
        partial void OnProfileIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSecond
        {
            get
            {
                return _IsSecond;
            }
            set
            {
                OnIsSecondChanging(value);
                ReportPropertyChanging("IsSecond");
                _IsSecond = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSecond");
                OnIsSecondChanged();
            }
        }
        private global::System.Boolean _IsSecond;
        partial void OnIsSecondChanging(global::System.Boolean value);
        partial void OnIsSecondChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsReduced
        {
            get
            {
                return _IsReduced;
            }
            set
            {
                OnIsReducedChanging(value);
                ReportPropertyChanging("IsReduced");
                _IsReduced = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsReduced");
                OnIsReducedChanged();
            }
        }
        private global::System.Boolean _IsReduced;
        partial void OnIsReducedChanging(global::System.Boolean value);
        partial void OnIsReducedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsParallel
        {
            get
            {
                return _IsParallel;
            }
            set
            {
                OnIsParallelChanging(value);
                ReportPropertyChanging("IsParallel");
                _IsParallel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsParallel");
                OnIsParallelChanged();
            }
        }
        private global::System.Boolean _IsParallel;
        partial void OnIsParallelChanging(global::System.Boolean value);
        partial void OnIsParallelChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfClose
        {
            get
            {
                return _DateOfClose;
            }
            set
            {
                OnDateOfCloseChanging(value);
                ReportPropertyChanging("DateOfClose");
                _DateOfClose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfClose");
                OnDateOfCloseChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfClose;
        partial void OnDateOfCloseChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfCloseChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CampaignYear
        {
            get
            {
                return _CampaignYear;
            }
            set
            {
                OnCampaignYearChanging(value);
                ReportPropertyChanging("CampaignYear");
                _CampaignYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CampaignYear");
                OnCampaignYearChanged();
            }
        }
        private Nullable<global::System.Int32> _CampaignYear;
        partial void OnCampaignYearChanging(Nullable<global::System.Int32> value);
        partial void OnCampaignYearChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsExpress
        {
            get
            {
                return _IsExpress;
            }
            set
            {
                OnIsExpressChanging(value);
                ReportPropertyChanging("IsExpress");
                _IsExpress = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsExpress");
                OnIsExpressChanged();
            }
        }
        private global::System.Boolean _IsExpress;
        partial void OnIsExpressChanging(global::System.Boolean value);
        partial void OnIsExpressChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsElectronic
        {
            get
            {
                return _IsElectronic;
            }
            set
            {
                OnIsElectronicChanging(value);
                ReportPropertyChanging("IsElectronic");
                _IsElectronic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsElectronic");
                OnIsElectronicChanged();
            }
        }
        private global::System.Boolean _IsElectronic;
        partial void OnIsElectronicChanging(global::System.Boolean value);
        partial void OnIsElectronicChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDistance
        {
            get
            {
                return _IsDistance;
            }
            set
            {
                OnIsDistanceChanging(value);
                ReportPropertyChanging("IsDistance");
                _IsDistance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDistance");
                OnIsDistanceChanged();
            }
        }
        private global::System.Boolean _IsDistance;
        partial void OnIsDistanceChanging(global::System.Boolean value);
        partial void OnIsDistanceChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> QualificationId
        {
            get
            {
                return _QualificationId;
            }
            set
            {
                OnQualificationIdChanging(value);
                ReportPropertyChanging("QualificationId");
                _QualificationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QualificationId");
                OnQualificationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _QualificationId;
        partial void OnQualificationIdChanging(Nullable<global::System.Int32> value);
        partial void OnQualificationIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QualificationName
        {
            get
            {
                return _QualificationName;
            }
            set
            {
                OnQualificationNameChanging(value);
                ReportPropertyChanging("QualificationName");
                _QualificationName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QualificationName");
                OnQualificationNameChanged();
            }
        }
        private global::System.String _QualificationName;
        partial void OnQualificationNameChanging(global::System.String value);
        partial void OnQualificationNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AggregateGroupId
        {
            get
            {
                return _AggregateGroupId;
            }
            set
            {
                OnAggregateGroupIdChanging(value);
                ReportPropertyChanging("AggregateGroupId");
                _AggregateGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AggregateGroupId");
                OnAggregateGroupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AggregateGroupId;
        partial void OnAggregateGroupIdChanging(Nullable<global::System.Int32> value);
        partial void OnAggregateGroupIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AggregateGroupName
        {
            get
            {
                return _AggregateGroupName;
            }
            set
            {
                OnAggregateGroupNameChanging(value);
                ReportPropertyChanging("AggregateGroupName");
                _AggregateGroupName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AggregateGroupName");
                OnAggregateGroupNameChanged();
            }
        }
        private global::System.String _AggregateGroupName;
        partial void OnAggregateGroupNameChanging(global::System.String value);
        partial void OnAggregateGroupNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProgramModeId
        {
            get
            {
                return _ProgramModeId;
            }
            set
            {
                OnProgramModeIdChanging(value);
                ReportPropertyChanging("ProgramModeId");
                _ProgramModeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProgramModeId");
                OnProgramModeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProgramModeId;
        partial void OnProgramModeIdChanging(Nullable<global::System.Int32> value);
        partial void OnProgramModeIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProgramModeName
        {
            get
            {
                return _ProgramModeName;
            }
            set
            {
                OnProgramModeNameChanging(value);
                ReportPropertyChanging("ProgramModeName");
                _ProgramModeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProgramModeName");
                OnProgramModeNameChanged();
            }
        }
        private global::System.String _ProgramModeName;
        partial void OnProgramModeNameChanging(global::System.String value);
        partial void OnProgramModeNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EducationPeriodId
        {
            get
            {
                return _EducationPeriodId;
            }
            set
            {
                OnEducationPeriodIdChanging(value);
                ReportPropertyChanging("EducationPeriodId");
                _EducationPeriodId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EducationPeriodId");
                OnEducationPeriodIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EducationPeriodId;
        partial void OnEducationPeriodIdChanging(Nullable<global::System.Int32> value);
        partial void OnEducationPeriodIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EducationPeriodName
        {
            get
            {
                return _EducationPeriodName;
            }
            set
            {
                OnEducationPeriodNameChanging(value);
                ReportPropertyChanging("EducationPeriodName");
                _EducationPeriodName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EducationPeriodName");
                OnEducationPeriodNameChanged();
            }
        }
        private global::System.String _EducationPeriodName;
        partial void OnEducationPeriodNameChanging(global::System.String value);
        partial void OnEducationPeriodNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfStart
        {
            get
            {
                return _DateOfStart;
            }
            set
            {
                OnDateOfStartChanging(value);
                ReportPropertyChanging("DateOfStart");
                _DateOfStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfStart");
                OnDateOfStartChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfStart;
        partial void OnDateOfStartChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfStartChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LicenseProgramNameEng
        {
            get
            {
                return _LicenseProgramNameEng;
            }
            set
            {
                OnLicenseProgramNameEngChanging(value);
                ReportPropertyChanging("LicenseProgramNameEng");
                _LicenseProgramNameEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LicenseProgramNameEng");
                OnLicenseProgramNameEngChanged();
            }
        }
        private global::System.String _LicenseProgramNameEng;
        partial void OnLicenseProgramNameEngChanging(global::System.String value);
        partial void OnLicenseProgramNameEngChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ObrazProgramNameEng
        {
            get
            {
                return _ObrazProgramNameEng;
            }
            set
            {
                OnObrazProgramNameEngChanging(value);
                ReportPropertyChanging("ObrazProgramNameEng");
                _ObrazProgramNameEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ObrazProgramNameEng");
                OnObrazProgramNameEngChanged();
            }
        }
        private global::System.String _ObrazProgramNameEng;
        partial void OnObrazProgramNameEngChanging(global::System.String value);
        partial void OnObrazProgramNameEngChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProfileNameEng
        {
            get
            {
                return _ProfileNameEng;
            }
            set
            {
                OnProfileNameEngChanging(value);
                ReportPropertyChanging("ProfileNameEng");
                _ProfileNameEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProfileNameEng");
                OnProfileNameEngChanged();
            }
        }
        private global::System.String _ProfileNameEng;
        partial void OnProfileNameEngChanging(global::System.String value);
        partial void OnProfileNameEngChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StudyBasisNameEng
        {
            get
            {
                return _StudyBasisNameEng;
            }
            set
            {
                OnStudyBasisNameEngChanging(value);
                ReportPropertyChanging("StudyBasisNameEng");
                _StudyBasisNameEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StudyBasisNameEng");
                OnStudyBasisNameEngChanged();
            }
        }
        private global::System.String _StudyBasisNameEng;
        partial void OnStudyBasisNameEngChanging(global::System.String value);
        partial void OnStudyBasisNameEngChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StudyFormNameEng
        {
            get
            {
                return _StudyFormNameEng;
            }
            set
            {
                OnStudyFormNameEngChanging(value);
                ReportPropertyChanging("StudyFormNameEng");
                _StudyFormNameEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StudyFormNameEng");
                OnStudyFormNameEngChanged();
            }
        }
        private global::System.String _StudyFormNameEng;
        partial void OnStudyFormNameEngChanging(global::System.String value);
        partial void OnStudyFormNameEngChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsUsedForPriem
        {
            get
            {
                return _IsUsedForPriem;
            }
            set
            {
                OnIsUsedForPriemChanging(value);
                ReportPropertyChanging("IsUsedForPriem");
                _IsUsedForPriem = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsUsedForPriem");
                OnIsUsedForPriemChanged();
            }
        }
        private global::System.Boolean _IsUsedForPriem;
        partial void OnIsUsedForPriemChanging(global::System.Boolean value);
        partial void OnIsUsedForPriemChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Application_Entry", "Application")]
        public EntityCollection<Application> Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("OnlinePriem2012Model.FK_Application_Entry", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("OnlinePriem2012Model.FK_Application_Entry", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Entry_Semester", "Semester")]
        public Semester Semester
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Semester>("OnlinePriem2012Model.FK_Entry_Semester", "Semester").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Semester>("OnlinePriem2012Model.FK_Entry_Semester", "Semester").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Semester> SemesterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Semester>("OnlinePriem2012Model.FK_Entry_Semester", "Semester");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Semester>("OnlinePriem2012Model.FK_Entry_Semester", "Semester", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="ForeignLanguage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ForeignLanguage : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ForeignLanguage.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static ForeignLanguage CreateForeignLanguage(global::System.Int32 id)
        {
            ForeignLanguage foreignLanguage = new ForeignLanguage();
            foreignLanguage.Id = id;
            return foreignLanguage;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameEng
        {
            get
            {
                return _NameEng;
            }
            set
            {
                OnNameEngChanging(value);
                ReportPropertyChanging("NameEng");
                _NameEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NameEng");
                OnNameEngChanged();
            }
        }
        private global::System.String _NameEng;
        partial void OnNameEngChanging(global::System.String value);
        partial void OnNameEngChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameRus
        {
            get
            {
                return _NameRus;
            }
            set
            {
                OnNameRusChanging(value);
                ReportPropertyChanging("NameRus");
                _NameRus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NameRus");
                OnNameRusChanged();
            }
        }
        private global::System.String _NameRus;
        partial void OnNameRusChanging(global::System.String value);
        partial void OnNameRusChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="ForeignLanguageLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ForeignLanguageLevel : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ForeignLanguageLevel.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static ForeignLanguageLevel CreateForeignLanguageLevel(global::System.Int32 id)
        {
            ForeignLanguageLevel foreignLanguageLevel = new ForeignLanguageLevel();
            foreignLanguageLevel.Id = id;
            return foreignLanguageLevel;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameEng
        {
            get
            {
                return _NameEng;
            }
            set
            {
                OnNameEngChanging(value);
                ReportPropertyChanging("NameEng");
                _NameEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NameEng");
                OnNameEngChanged();
            }
        }
        private global::System.String _NameEng;
        partial void OnNameEngChanging(global::System.String value);
        partial void OnNameEngChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameRus
        {
            get
            {
                return _NameRus;
            }
            set
            {
                OnNameRusChanging(value);
                ReportPropertyChanging("NameRus");
                _NameRus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NameRus");
                OnNameRusChanged();
            }
        }
        private global::System.String _NameRus;
        partial void OnNameRusChanging(global::System.String value);
        partial void OnNameRusChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="Language")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Language : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Language.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Language CreateLanguage(global::System.Int32 id)
        {
            Language language = new Language();
            language.Id = id;
            return language;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonEducationDocument_Language", "PersonEducationDocument")]
        public EntityCollection<PersonEducationDocument> PersonEducationDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonEducationDocument>("OnlinePriem2012Model.FK_PersonEducationDocument_Language", "PersonEducationDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonEducationDocument>("OnlinePriem2012Model.FK_PersonEducationDocument_Language", "PersonEducationDocument", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="MotivationMail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MotivationMail : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта MotivationMail.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static MotivationMail CreateMotivationMail(global::System.Guid id)
        {
            MotivationMail motivationMail = new MotivationMail();
            motivationMail.Id = id;
            return motivationMail;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ApplicationId;
        partial void OnApplicationIdChanging(Nullable<global::System.Guid> value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MailText
        {
            get
            {
                return _MailText;
            }
            set
            {
                OnMailTextChanging(value);
                ReportPropertyChanging("MailText");
                _MailText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MailText");
                OnMailTextChanged();
            }
        }
        private global::System.String _MailText;
        partial void OnMailTextChanging(global::System.String value);
        partial void OnMailTextChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="OlympBook")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OlympBook : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта OlympBook.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="olympLevelId">Исходное значение свойства OlympLevelId.</param>
        /// <param name="olympNameId">Исходное значение свойства OlympNameId.</param>
        /// <param name="olympSubjectId">Исходное значение свойства OlympSubjectId.</param>
        /// <param name="olympTypeId">Исходное значение свойства OlympTypeId.</param>
        public static OlympBook CreateOlympBook(global::System.Guid id, global::System.Int32 olympLevelId, global::System.Int32 olympNameId, global::System.Int32 olympSubjectId, global::System.Int32 olympTypeId)
        {
            OlympBook olympBook = new OlympBook();
            olympBook.Id = id;
            olympBook.OlympLevelId = olympLevelId;
            olympBook.OlympNameId = olympNameId;
            olympBook.OlympSubjectId = olympSubjectId;
            olympBook.OlympTypeId = olympTypeId;
            return olympBook;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OlympLevelId
        {
            get
            {
                return _OlympLevelId;
            }
            set
            {
                OnOlympLevelIdChanging(value);
                ReportPropertyChanging("OlympLevelId");
                _OlympLevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OlympLevelId");
                OnOlympLevelIdChanged();
            }
        }
        private global::System.Int32 _OlympLevelId;
        partial void OnOlympLevelIdChanging(global::System.Int32 value);
        partial void OnOlympLevelIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OlympNameId
        {
            get
            {
                return _OlympNameId;
            }
            set
            {
                OnOlympNameIdChanging(value);
                ReportPropertyChanging("OlympNameId");
                _OlympNameId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OlympNameId");
                OnOlympNameIdChanged();
            }
        }
        private global::System.Int32 _OlympNameId;
        partial void OnOlympNameIdChanging(global::System.Int32 value);
        partial void OnOlympNameIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OlympSubjectId
        {
            get
            {
                return _OlympSubjectId;
            }
            set
            {
                OnOlympSubjectIdChanging(value);
                ReportPropertyChanging("OlympSubjectId");
                _OlympSubjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OlympSubjectId");
                OnOlympSubjectIdChanged();
            }
        }
        private global::System.Int32 _OlympSubjectId;
        partial void OnOlympSubjectIdChanging(global::System.Int32 value);
        partial void OnOlympSubjectIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OlympTypeId
        {
            get
            {
                return _OlympTypeId;
            }
            set
            {
                OnOlympTypeIdChanging(value);
                ReportPropertyChanging("OlympTypeId");
                _OlympTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OlympTypeId");
                OnOlympTypeIdChanged();
            }
        }
        private global::System.Int32 _OlympTypeId;
        partial void OnOlympTypeIdChanging(global::System.Int32 value);
        partial void OnOlympTypeIdChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_OlympBook_OlympLevel", "OlympLevel")]
        public OlympLevel OlympLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympLevel>("OnlinePriem2012Model.FK_OlympBook_OlympLevel", "OlympLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympLevel>("OnlinePriem2012Model.FK_OlympBook_OlympLevel", "OlympLevel").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OlympLevel> OlympLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympLevel>("OnlinePriem2012Model.FK_OlympBook_OlympLevel", "OlympLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OlympLevel>("OnlinePriem2012Model.FK_OlympBook_OlympLevel", "OlympLevel", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_OlympBook_OlympName", "OlympName")]
        public OlympName OlympName
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympName>("OnlinePriem2012Model.FK_OlympBook_OlympName", "OlympName").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympName>("OnlinePriem2012Model.FK_OlympBook_OlympName", "OlympName").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OlympName> OlympNameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympName>("OnlinePriem2012Model.FK_OlympBook_OlympName", "OlympName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OlympName>("OnlinePriem2012Model.FK_OlympBook_OlympName", "OlympName", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_OlympBook_OlympSubject", "OlympSubject")]
        public OlympSubject OlympSubject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympSubject>("OnlinePriem2012Model.FK_OlympBook_OlympSubject", "OlympSubject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympSubject>("OnlinePriem2012Model.FK_OlympBook_OlympSubject", "OlympSubject").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OlympSubject> OlympSubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympSubject>("OnlinePriem2012Model.FK_OlympBook_OlympSubject", "OlympSubject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OlympSubject>("OnlinePriem2012Model.FK_OlympBook_OlympSubject", "OlympSubject", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_OlympBook_OlympType", "OlympType")]
        public OlympType OlympType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympType>("OnlinePriem2012Model.FK_OlympBook_OlympType", "OlympType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympType>("OnlinePriem2012Model.FK_OlympBook_OlympType", "OlympType").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OlympType> OlympTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympType>("OnlinePriem2012Model.FK_OlympBook_OlympType", "OlympType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OlympType>("OnlinePriem2012Model.FK_OlympBook_OlympType", "OlympType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="Olympiads")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Olympiads : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Olympiads.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="personId">Исходное значение свойства PersonId.</param>
        /// <param name="olympTypeId">Исходное значение свойства OlympTypeId.</param>
        /// <param name="olympNameId">Исходное значение свойства OlympNameId.</param>
        /// <param name="olympSubjectId">Исходное значение свойства OlympSubjectId.</param>
        /// <param name="olympValueId">Исходное значение свойства OlympValueId.</param>
        public static Olympiads CreateOlympiads(global::System.Guid id, global::System.Guid personId, global::System.Int32 olympTypeId, global::System.Int32 olympNameId, global::System.Int32 olympSubjectId, global::System.Int32 olympValueId)
        {
            Olympiads olympiads = new Olympiads();
            olympiads.Id = id;
            olympiads.PersonId = personId;
            olympiads.OlympTypeId = olympTypeId;
            olympiads.OlympNameId = olympNameId;
            olympiads.OlympSubjectId = olympSubjectId;
            olympiads.OlympValueId = olympValueId;
            return olympiads;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OlympTypeId
        {
            get
            {
                return _OlympTypeId;
            }
            set
            {
                OnOlympTypeIdChanging(value);
                ReportPropertyChanging("OlympTypeId");
                _OlympTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OlympTypeId");
                OnOlympTypeIdChanged();
            }
        }
        private global::System.Int32 _OlympTypeId;
        partial void OnOlympTypeIdChanging(global::System.Int32 value);
        partial void OnOlympTypeIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OlympNameId
        {
            get
            {
                return _OlympNameId;
            }
            set
            {
                OnOlympNameIdChanging(value);
                ReportPropertyChanging("OlympNameId");
                _OlympNameId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OlympNameId");
                OnOlympNameIdChanged();
            }
        }
        private global::System.Int32 _OlympNameId;
        partial void OnOlympNameIdChanging(global::System.Int32 value);
        partial void OnOlympNameIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OlympSubjectId
        {
            get
            {
                return _OlympSubjectId;
            }
            set
            {
                OnOlympSubjectIdChanging(value);
                ReportPropertyChanging("OlympSubjectId");
                _OlympSubjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OlympSubjectId");
                OnOlympSubjectIdChanged();
            }
        }
        private global::System.Int32 _OlympSubjectId;
        partial void OnOlympSubjectIdChanging(global::System.Int32 value);
        partial void OnOlympSubjectIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OlympValueId
        {
            get
            {
                return _OlympValueId;
            }
            set
            {
                OnOlympValueIdChanging(value);
                ReportPropertyChanging("OlympValueId");
                _OlympValueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OlympValueId");
                OnOlympValueIdChanged();
            }
        }
        private global::System.Int32 _OlympValueId;
        partial void OnOlympValueIdChanging(global::System.Int32 value);
        partial void OnOlympValueIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentSeries
        {
            get
            {
                return _DocumentSeries;
            }
            set
            {
                OnDocumentSeriesChanging(value);
                ReportPropertyChanging("DocumentSeries");
                _DocumentSeries = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentSeries");
                OnDocumentSeriesChanged();
            }
        }
        private global::System.String _DocumentSeries;
        partial void OnDocumentSeriesChanging(global::System.String value);
        partial void OnDocumentSeriesChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentNumber
        {
            get
            {
                return _DocumentNumber;
            }
            set
            {
                OnDocumentNumberChanging(value);
                ReportPropertyChanging("DocumentNumber");
                _DocumentNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentNumber");
                OnDocumentNumberChanged();
            }
        }
        private global::System.String _DocumentNumber;
        partial void OnDocumentNumberChanging(global::System.String value);
        partial void OnDocumentNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DocumentDate
        {
            get
            {
                return _DocumentDate;
            }
            set
            {
                OnDocumentDateChanging(value);
                ReportPropertyChanging("DocumentDate");
                _DocumentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentDate");
                OnDocumentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DocumentDate;
        partial void OnDocumentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDocumentDateChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Olympiads_OlympName", "OlympName")]
        public OlympName OlympName
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympName>("OnlinePriem2012Model.FK_Olympiads_OlympName", "OlympName").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympName>("OnlinePriem2012Model.FK_Olympiads_OlympName", "OlympName").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OlympName> OlympNameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympName>("OnlinePriem2012Model.FK_Olympiads_OlympName", "OlympName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OlympName>("OnlinePriem2012Model.FK_Olympiads_OlympName", "OlympName", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Olympiads_OlympSubject", "OlympSubject")]
        public OlympSubject OlympSubject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympSubject>("OnlinePriem2012Model.FK_Olympiads_OlympSubject", "OlympSubject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympSubject>("OnlinePriem2012Model.FK_Olympiads_OlympSubject", "OlympSubject").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OlympSubject> OlympSubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympSubject>("OnlinePriem2012Model.FK_Olympiads_OlympSubject", "OlympSubject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OlympSubject>("OnlinePriem2012Model.FK_Olympiads_OlympSubject", "OlympSubject", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Olympiads_OlympType", "OlympType")]
        public OlympType OlympType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympType>("OnlinePriem2012Model.FK_Olympiads_OlympType", "OlympType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympType>("OnlinePriem2012Model.FK_Olympiads_OlympType", "OlympType").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OlympType> OlympTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympType>("OnlinePriem2012Model.FK_Olympiads_OlympType", "OlympType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OlympType>("OnlinePriem2012Model.FK_Olympiads_OlympType", "OlympType", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Olympiads_OlympValue", "OlympValue")]
        public OlympValue OlympValue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympValue>("OnlinePriem2012Model.FK_Olympiads_OlympValue", "OlympValue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympValue>("OnlinePriem2012Model.FK_Olympiads_OlympValue", "OlympValue").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OlympValue> OlympValueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympValue>("OnlinePriem2012Model.FK_Olympiads_OlympValue", "OlympValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OlympValue>("OnlinePriem2012Model.FK_Olympiads_OlympValue", "OlympValue", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Olympiads_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_Olympiads_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_Olympiads_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_Olympiads_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("OnlinePriem2012Model.FK_Olympiads_Person", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="OlympLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OlympLevel : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта OlympLevel.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static OlympLevel CreateOlympLevel(global::System.Int32 id)
        {
            OlympLevel olympLevel = new OlympLevel();
            olympLevel.Id = id;
            return olympLevel;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_OlympBook_OlympLevel", "OlympBook")]
        public EntityCollection<OlympBook> OlympBook
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OlympBook>("OnlinePriem2012Model.FK_OlympBook_OlympLevel", "OlympBook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OlympBook>("OnlinePriem2012Model.FK_OlympBook_OlympLevel", "OlympBook", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="OlympName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OlympName : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта OlympName.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="number">Исходное значение свойства Number.</param>
        public static OlympName CreateOlympName(global::System.Int32 id, global::System.Int32 number)
        {
            OlympName olympName = new OlympName();
            olympName.Id = id;
            olympName.Number = number;
            return olympName;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_OlympBook_OlympName", "OlympBook")]
        public EntityCollection<OlympBook> OlympBook
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OlympBook>("OnlinePriem2012Model.FK_OlympBook_OlympName", "OlympBook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OlympBook>("OnlinePriem2012Model.FK_OlympBook_OlympName", "OlympBook", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Olympiads_OlympName", "Olympiads")]
        public EntityCollection<Olympiads> Olympiads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Olympiads>("OnlinePriem2012Model.FK_Olympiads_OlympName", "Olympiads");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Olympiads>("OnlinePriem2012Model.FK_Olympiads_OlympName", "Olympiads", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="OlympSubject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OlympSubject : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта OlympSubject.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static OlympSubject CreateOlympSubject(global::System.Int32 id)
        {
            OlympSubject olympSubject = new OlympSubject();
            olympSubject.Id = id;
            return olympSubject;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_OlympBook_OlympSubject", "OlympBook")]
        public EntityCollection<OlympBook> OlympBook
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OlympBook>("OnlinePriem2012Model.FK_OlympBook_OlympSubject", "OlympBook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OlympBook>("OnlinePriem2012Model.FK_OlympBook_OlympSubject", "OlympBook", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Olympiads_OlympSubject", "Olympiads")]
        public EntityCollection<Olympiads> Olympiads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Olympiads>("OnlinePriem2012Model.FK_Olympiads_OlympSubject", "Olympiads");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Olympiads>("OnlinePriem2012Model.FK_Olympiads_OlympSubject", "Olympiads", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="OlympType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OlympType : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта OlympType.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static OlympType CreateOlympType(global::System.Int32 id)
        {
            OlympType olympType = new OlympType();
            olympType.Id = id;
            return olympType;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_OlympBook_OlympType", "OlympBook")]
        public EntityCollection<OlympBook> OlympBook
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OlympBook>("OnlinePriem2012Model.FK_OlympBook_OlympType", "OlympBook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OlympBook>("OnlinePriem2012Model.FK_OlympBook_OlympType", "OlympBook", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Olympiads_OlympType", "Olympiads")]
        public EntityCollection<Olympiads> Olympiads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Olympiads>("OnlinePriem2012Model.FK_Olympiads_OlympType", "Olympiads");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Olympiads>("OnlinePriem2012Model.FK_Olympiads_OlympType", "Olympiads", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="OlympValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OlympValue : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта OlympValue.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static OlympValue CreateOlympValue(global::System.Int32 id)
        {
            OlympValue olympValue = new OlympValue();
            olympValue.Id = id;
            return olympValue;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Olympiads_OlympValue", "Olympiads")]
        public EntityCollection<Olympiads> Olympiads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Olympiads>("OnlinePriem2012Model.FK_Olympiads_OlympValue", "Olympiads");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Olympiads>("OnlinePriem2012Model.FK_Olympiads_OlympValue", "Olympiads", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="PassportType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PassportType : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PassportType.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static PassportType CreatePassportType(global::System.Int32 id)
        {
            PassportType passportType = new PassportType();
            passportType.Id = id;
            return passportType;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameEng
        {
            get
            {
                return _NameEng;
            }
            set
            {
                OnNameEngChanging(value);
                ReportPropertyChanging("NameEng");
                _NameEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NameEng");
                OnNameEngChanged();
            }
        }
        private global::System.String _NameEng;
        partial void OnNameEngChanging(global::System.String value);
        partial void OnNameEngChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsApprovedForeign
        {
            get
            {
                return _IsApprovedForeign;
            }
            set
            {
                OnIsApprovedForeignChanging(value);
                ReportPropertyChanging("IsApprovedForeign");
                _IsApprovedForeign = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApprovedForeign");
                OnIsApprovedForeignChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsApprovedForeign;
        partial void OnIsApprovedForeignChanging(Nullable<global::System.Boolean> value);
        partial void OnIsApprovedForeignChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Person_PassportType", "Person")]
        public EntityCollection<Person> Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("OnlinePriem2012Model.FK_Person_PassportType", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("OnlinePriem2012Model.FK_Person_PassportType", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Person.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="userId">Исходное значение свойства UserId.</param>
        /// <param name="barcode">Исходное значение свойства Barcode.</param>
        /// <param name="registrationStage">Исходное значение свойства RegistrationStage.</param>
        /// <param name="abiturientTypeId">Исходное значение свойства AbiturientTypeId.</param>
        public static Person CreatePerson(global::System.Guid id, global::System.Guid userId, global::System.Int32 barcode, global::System.Int32 registrationStage, global::System.Int32 abiturientTypeId)
        {
            Person person = new Person();
            person.Id = id;
            person.UserId = userId;
            person.Barcode = barcode;
            person.RegistrationStage = registrationStage;
            person.AbiturientTypeId = abiturientTypeId;
            return person;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Barcode
        {
            get
            {
                return _Barcode;
            }
            set
            {
                OnBarcodeChanging(value);
                ReportPropertyChanging("Barcode");
                _Barcode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Barcode");
                OnBarcodeChanged();
            }
        }
        private global::System.Int32 _Barcode;
        partial void OnBarcodeChanging(global::System.Int32 value);
        partial void OnBarcodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecondName
        {
            get
            {
                return _SecondName;
            }
            set
            {
                OnSecondNameChanging(value);
                ReportPropertyChanging("SecondName");
                _SecondName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecondName");
                OnSecondNameChanged();
            }
        }
        private global::System.String _SecondName;
        partial void OnSecondNameChanging(global::System.String value);
        partial void OnSecondNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private Nullable<global::System.Boolean> _Sex;
        partial void OnSexChanging(Nullable<global::System.Boolean> value);
        partial void OnSexChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BirthPlace
        {
            get
            {
                return _BirthPlace;
            }
            set
            {
                OnBirthPlaceChanging(value);
                ReportPropertyChanging("BirthPlace");
                _BirthPlace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BirthPlace");
                OnBirthPlaceChanged();
            }
        }
        private global::System.String _BirthPlace;
        partial void OnBirthPlaceChanging(global::System.String value);
        partial void OnBirthPlaceChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PassportTypeId
        {
            get
            {
                return _PassportTypeId;
            }
            set
            {
                OnPassportTypeIdChanging(value);
                ReportPropertyChanging("PassportTypeId");
                _PassportTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PassportTypeId");
                OnPassportTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PassportTypeId;
        partial void OnPassportTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnPassportTypeIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PassportSeries
        {
            get
            {
                return _PassportSeries;
            }
            set
            {
                OnPassportSeriesChanging(value);
                ReportPropertyChanging("PassportSeries");
                _PassportSeries = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PassportSeries");
                OnPassportSeriesChanged();
            }
        }
        private global::System.String _PassportSeries;
        partial void OnPassportSeriesChanging(global::System.String value);
        partial void OnPassportSeriesChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PassportNumber
        {
            get
            {
                return _PassportNumber;
            }
            set
            {
                OnPassportNumberChanging(value);
                ReportPropertyChanging("PassportNumber");
                _PassportNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PassportNumber");
                OnPassportNumberChanged();
            }
        }
        private global::System.String _PassportNumber;
        partial void OnPassportNumberChanging(global::System.String value);
        partial void OnPassportNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PassportDate
        {
            get
            {
                return _PassportDate;
            }
            set
            {
                OnPassportDateChanging(value);
                ReportPropertyChanging("PassportDate");
                _PassportDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PassportDate");
                OnPassportDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PassportDate;
        partial void OnPassportDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPassportDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PassportAuthor
        {
            get
            {
                return _PassportAuthor;
            }
            set
            {
                OnPassportAuthorChanging(value);
                ReportPropertyChanging("PassportAuthor");
                _PassportAuthor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PassportAuthor");
                OnPassportAuthorChanged();
            }
        }
        private global::System.String _PassportAuthor;
        partial void OnPassportAuthorChanging(global::System.String value);
        partial void OnPassportAuthorChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PassportCode
        {
            get
            {
                return _PassportCode;
            }
            set
            {
                OnPassportCodeChanging(value);
                ReportPropertyChanging("PassportCode");
                _PassportCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PassportCode");
                OnPassportCodeChanged();
            }
        }
        private global::System.String _PassportCode;
        partial void OnPassportCodeChanging(global::System.String value);
        partial void OnPassportCodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PassportValid
        {
            get
            {
                return _PassportValid;
            }
            set
            {
                OnPassportValidChanging(value);
                ReportPropertyChanging("PassportValid");
                _PassportValid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PassportValid");
                OnPassportValidChanged();
            }
        }
        private Nullable<global::System.DateTime> _PassportValid;
        partial void OnPassportValidChanging(Nullable<global::System.DateTime> value);
        partial void OnPassportValidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NationalityId
        {
            get
            {
                return _NationalityId;
            }
            set
            {
                OnNationalityIdChanging(value);
                ReportPropertyChanging("NationalityId");
                _NationalityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NationalityId");
                OnNationalityIdChanged();
            }
        }
        private Nullable<global::System.Int32> _NationalityId;
        partial void OnNationalityIdChanging(Nullable<global::System.Int32> value);
        partial void OnNationalityIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegistrationStage
        {
            get
            {
                return _RegistrationStage;
            }
            set
            {
                OnRegistrationStageChanging(value);
                ReportPropertyChanging("RegistrationStage");
                _RegistrationStage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistrationStage");
                OnRegistrationStageChanged();
            }
        }
        private global::System.Int32 _RegistrationStage;
        partial void OnRegistrationStageChanging(global::System.Int32 value);
        partial void OnRegistrationStageChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AbiturientTypeId
        {
            get
            {
                return _AbiturientTypeId;
            }
            set
            {
                OnAbiturientTypeIdChanging(value);
                ReportPropertyChanging("AbiturientTypeId");
                _AbiturientTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AbiturientTypeId");
                OnAbiturientTypeIdChanged();
            }
        }
        private global::System.Int32 _AbiturientTypeId;
        partial void OnAbiturientTypeIdChanging(global::System.Int32 value);
        partial void OnAbiturientTypeIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsLocked
        {
            get
            {
                return _IsLocked;
            }
            set
            {
                OnIsLockedChanging(value);
                ReportPropertyChanging("IsLocked");
                _IsLocked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLocked");
                OnIsLockedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsLocked;
        partial void OnIsLockedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsLockedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsImported
        {
            get
            {
                return _IsImported;
            }
            set
            {
                OnIsImportedChanging(value);
                ReportPropertyChanging("IsImported");
                _IsImported = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsImported");
                OnIsImportedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsImported;
        partial void OnIsImportedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsImportedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateReviewDocs
        {
            get
            {
                return _DateReviewDocs;
            }
            set
            {
                OnDateReviewDocsChanging(value);
                ReportPropertyChanging("DateReviewDocs");
                _DateReviewDocs = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateReviewDocs");
                OnDateReviewDocsChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateReviewDocs;
        partial void OnDateReviewDocsChanging(Nullable<global::System.DateTime> value);
        partial void OnDateReviewDocsChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDisabled
        {
            get
            {
                return _IsDisabled;
            }
            set
            {
                OnIsDisabledChanging(value);
                ReportPropertyChanging("IsDisabled");
                _IsDisabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDisabled");
                OnIsDisabledChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDisabled;
        partial void OnIsDisabledChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDisabledChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Application_Person", "Application")]
        public EntityCollection<Application> Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("OnlinePriem2012Model.FK_Application_Person", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("OnlinePriem2012Model.FK_Application_Person", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Person_ForeignCountry", "Country")]
        public Country Nationality
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OnlinePriem2012Model.FK_Person_ForeignCountry", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OnlinePriem2012Model.FK_Person_ForeignCountry", "Country").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> NationalityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OnlinePriem2012Model.FK_Person_ForeignCountry", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("OnlinePriem2012Model.FK_Person_ForeignCountry", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Person_PassportType", "PassportType")]
        public PassportType PassportType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PassportType>("OnlinePriem2012Model.FK_Person_PassportType", "PassportType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PassportType>("OnlinePriem2012Model.FK_Person_PassportType", "PassportType").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PassportType> PassportTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PassportType>("OnlinePriem2012Model.FK_Person_PassportType", "PassportType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PassportType>("OnlinePriem2012Model.FK_Person_PassportType", "PassportType", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Person_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OnlinePriem2012Model.FK_Person_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OnlinePriem2012Model.FK_Person_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OnlinePriem2012Model.FK_Person_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("OnlinePriem2012Model.FK_Person_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonAddInfo_Person", "PersonAddInfo")]
        public PersonAddInfo PersonAddInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonAddInfo>("OnlinePriem2012Model.FK_PersonAddInfo_Person", "PersonAddInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonAddInfo>("OnlinePriem2012Model.FK_PersonAddInfo_Person", "PersonAddInfo").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PersonAddInfo> PersonAddInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonAddInfo>("OnlinePriem2012Model.FK_PersonAddInfo_Person", "PersonAddInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PersonAddInfo>("OnlinePriem2012Model.FK_PersonAddInfo_Person", "PersonAddInfo", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonChangeStudyFormReason_Person", "PersonChangeStudyFormReason")]
        public PersonChangeStudyFormReason PersonChangeStudyFormReason
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonChangeStudyFormReason>("OnlinePriem2012Model.FK_PersonChangeStudyFormReason_Person", "PersonChangeStudyFormReason").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonChangeStudyFormReason>("OnlinePriem2012Model.FK_PersonChangeStudyFormReason_Person", "PersonChangeStudyFormReason").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PersonChangeStudyFormReason> PersonChangeStudyFormReasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonChangeStudyFormReason>("OnlinePriem2012Model.FK_PersonChangeStudyFormReason_Person", "PersonChangeStudyFormReason");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PersonChangeStudyFormReason>("OnlinePriem2012Model.FK_PersonChangeStudyFormReason_Person", "PersonChangeStudyFormReason", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonContacts_Person", "PersonContacts")]
        public PersonContacts PersonContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonContacts>("OnlinePriem2012Model.FK_PersonContacts_Person", "PersonContacts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonContacts>("OnlinePriem2012Model.FK_PersonContacts_Person", "PersonContacts").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PersonContacts> PersonContactsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonContacts>("OnlinePriem2012Model.FK_PersonContacts_Person", "PersonContacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PersonContacts>("OnlinePriem2012Model.FK_PersonContacts_Person", "PersonContacts", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonCurrentEducation_Person", "PersonCurrentEducation")]
        public PersonCurrentEducation PersonCurrentEducation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonCurrentEducation>("OnlinePriem2012Model.FK_PersonCurrentEducation_Person", "PersonCurrentEducation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonCurrentEducation>("OnlinePriem2012Model.FK_PersonCurrentEducation_Person", "PersonCurrentEducation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PersonCurrentEducation> PersonCurrentEducationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonCurrentEducation>("OnlinePriem2012Model.FK_PersonCurrentEducation_Person", "PersonCurrentEducation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PersonCurrentEducation>("OnlinePriem2012Model.FK_PersonCurrentEducation_Person", "PersonCurrentEducation", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonDisorderInfo_Person", "PersonDisorderInfo")]
        public PersonDisorderInfo PersonDisorderInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonDisorderInfo>("OnlinePriem2012Model.FK_PersonDisorderInfo_Person", "PersonDisorderInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonDisorderInfo>("OnlinePriem2012Model.FK_PersonDisorderInfo_Person", "PersonDisorderInfo").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PersonDisorderInfo> PersonDisorderInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonDisorderInfo>("OnlinePriem2012Model.FK_PersonDisorderInfo_Person", "PersonDisorderInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PersonDisorderInfo>("OnlinePriem2012Model.FK_PersonDisorderInfo_Person", "PersonDisorderInfo", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonHighEducationInfo_Person", "PersonHighEducationInfo")]
        public PersonHighEducationInfo PersonHighEducationInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonHighEducationInfo>("OnlinePriem2012Model.FK_PersonHighEducationInfo_Person", "PersonHighEducationInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonHighEducationInfo>("OnlinePriem2012Model.FK_PersonHighEducationInfo_Person", "PersonHighEducationInfo").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PersonHighEducationInfo> PersonHighEducationInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonHighEducationInfo>("OnlinePriem2012Model.FK_PersonHighEducationInfo_Person", "PersonHighEducationInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PersonHighEducationInfo>("OnlinePriem2012Model.FK_PersonHighEducationInfo_Person", "PersonHighEducationInfo", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonVisaInfo_Person", "PersonVisaInfo")]
        public PersonVisaInfo PersonVisaInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonVisaInfo>("OnlinePriem2012Model.FK_PersonVisaInfo_Person", "PersonVisaInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonVisaInfo>("OnlinePriem2012Model.FK_PersonVisaInfo_Person", "PersonVisaInfo").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PersonVisaInfo> PersonVisaInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonVisaInfo>("OnlinePriem2012Model.FK_PersonVisaInfo_Person", "PersonVisaInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PersonVisaInfo>("OnlinePriem2012Model.FK_PersonVisaInfo_Person", "PersonVisaInfo", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonSchoolInfo_Person", "PersonSchoolInfo")]
        public PersonSchoolInfo PersonSchoolInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonSchoolInfo>("OnlinePriem2012Model.FK_PersonSchoolInfo_Person", "PersonSchoolInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonSchoolInfo>("OnlinePriem2012Model.FK_PersonSchoolInfo_Person", "PersonSchoolInfo").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PersonSchoolInfo> PersonSchoolInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonSchoolInfo>("OnlinePriem2012Model.FK_PersonSchoolInfo_Person", "PersonSchoolInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PersonSchoolInfo>("OnlinePriem2012Model.FK_PersonSchoolInfo_Person", "PersonSchoolInfo", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonWork_Person", "PersonWork")]
        public EntityCollection<PersonWork> PersonWork
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonWork>("OnlinePriem2012Model.FK_PersonWork_Person", "PersonWork");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonWork>("OnlinePriem2012Model.FK_PersonWork_Person", "PersonWork", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonSportQualification_Person", "PersonSportQualification")]
        public PersonSportQualification PersonSportQualification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonSportQualification>("OnlinePriem2012Model.FK_PersonSportQualification_Person", "PersonSportQualification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonSportQualification>("OnlinePriem2012Model.FK_PersonSportQualification_Person", "PersonSportQualification").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PersonSportQualification> PersonSportQualificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonSportQualification>("OnlinePriem2012Model.FK_PersonSportQualification_Person", "PersonSportQualification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PersonSportQualification>("OnlinePriem2012Model.FK_PersonSportQualification_Person", "PersonSportQualification", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Person_SPOSchoolExitClassId_Person", "Person_SPOSchoolExitClass")]
        public Person_SPOSchoolExitClass Person_SPOSchoolExitClass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person_SPOSchoolExitClass>("OnlinePriem2012Model.FK_Person_SPOSchoolExitClassId_Person", "Person_SPOSchoolExitClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person_SPOSchoolExitClass>("OnlinePriem2012Model.FK_Person_SPOSchoolExitClassId_Person", "Person_SPOSchoolExitClass").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person_SPOSchoolExitClass> Person_SPOSchoolExitClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person_SPOSchoolExitClass>("OnlinePriem2012Model.FK_Person_SPOSchoolExitClassId_Person", "Person_SPOSchoolExitClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person_SPOSchoolExitClass>("OnlinePriem2012Model.FK_Person_SPOSchoolExitClassId_Person", "Person_SPOSchoolExitClass", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Person_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OnlinePriem2012Model.FK_Person_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OnlinePriem2012Model.FK_Person_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OnlinePriem2012Model.FK_Person_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("OnlinePriem2012Model.FK_Person_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonScienceWork_Person", "PersonScienceWork")]
        public EntityCollection<PersonScienceWork> PersonScienceWork
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonScienceWork>("OnlinePriem2012Model.FK_PersonScienceWork_Person", "PersonScienceWork");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonScienceWork>("OnlinePriem2012Model.FK_PersonScienceWork_Person", "PersonScienceWork", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonEducationDocument_Person", "PersonEducationDocument")]
        public PersonEducationDocument PersonEducationDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonEducationDocument>("OnlinePriem2012Model.FK_PersonEducationDocument_Person", "PersonEducationDocument").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonEducationDocument>("OnlinePriem2012Model.FK_PersonEducationDocument_Person", "PersonEducationDocument").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PersonEducationDocument> PersonEducationDocumentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonEducationDocument>("OnlinePriem2012Model.FK_PersonEducationDocument_Person", "PersonEducationDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PersonEducationDocument>("OnlinePriem2012Model.FK_PersonEducationDocument_Person", "PersonEducationDocument", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Olympiads_Person", "Olympiads")]
        public EntityCollection<Olympiads> Olympiads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Olympiads>("OnlinePriem2012Model.FK_Olympiads_Person", "Olympiads");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Olympiads>("OnlinePriem2012Model.FK_Olympiads_Person", "Olympiads", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="Person_SPOSchoolExitClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person_SPOSchoolExitClass : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Person_SPOSchoolExitClass.
        /// </summary>
        /// <param name="personId">Исходное значение свойства PersonId.</param>
        public static Person_SPOSchoolExitClass CreatePerson_SPOSchoolExitClass(global::System.Guid personId)
        {
            Person_SPOSchoolExitClass person_SPOSchoolExitClass = new Person_SPOSchoolExitClass();
            person_SPOSchoolExitClass.PersonId = personId;
            return person_SPOSchoolExitClass;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                if (_PersonId != value)
                {
                    OnPersonIdChanging(value);
                    ReportPropertyChanging("PersonId");
                    _PersonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonId");
                    OnPersonIdChanged();
                }
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SchoolExitClassId
        {
            get
            {
                return _SchoolExitClassId;
            }
            set
            {
                OnSchoolExitClassIdChanging(value);
                ReportPropertyChanging("SchoolExitClassId");
                _SchoolExitClassId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SchoolExitClassId");
                OnSchoolExitClassIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SchoolExitClassId;
        partial void OnSchoolExitClassIdChanging(Nullable<global::System.Int32> value);
        partial void OnSchoolExitClassIdChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Person_SPOSchoolExitClassId_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_Person_SPOSchoolExitClassId_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_Person_SPOSchoolExitClassId_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_Person_SPOSchoolExitClassId_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("OnlinePriem2012Model.FK_Person_SPOSchoolExitClassId_Person", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="PersonAddInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonAddInfo : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PersonAddInfo.
        /// </summary>
        /// <param name="personId">Исходное значение свойства PersonId.</param>
        public static PersonAddInfo CreatePersonAddInfo(global::System.Guid personId)
        {
            PersonAddInfo personAddInfo = new PersonAddInfo();
            personAddInfo.PersonId = personId;
            return personAddInfo;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                if (_PersonId != value)
                {
                    OnPersonIdChanging(value);
                    ReportPropertyChanging("PersonId");
                    _PersonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonId");
                    OnPersonIdChanged();
                }
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaritalStatus
        {
            get
            {
                return _MaritalStatus;
            }
            set
            {
                OnMaritalStatusChanging(value);
                ReportPropertyChanging("MaritalStatus");
                _MaritalStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaritalStatus");
                OnMaritalStatusChanged();
            }
        }
        private global::System.String _MaritalStatus;
        partial void OnMaritalStatusChanging(global::System.String value);
        partial void OnMaritalStatusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SocialStatus
        {
            get
            {
                return _SocialStatus;
            }
            set
            {
                OnSocialStatusChanging(value);
                ReportPropertyChanging("SocialStatus");
                _SocialStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SocialStatus");
                OnSocialStatusChanged();
            }
        }
        private global::System.String _SocialStatus;
        partial void OnSocialStatusChanging(global::System.String value);
        partial void OnSocialStatusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddInfo
        {
            get
            {
                return _AddInfo;
            }
            set
            {
                OnAddInfoChanging(value);
                ReportPropertyChanging("AddInfo");
                _AddInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddInfo");
                OnAddInfoChanged();
            }
        }
        private global::System.String _AddInfo;
        partial void OnAddInfoChanging(global::System.String value);
        partial void OnAddInfoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Parents
        {
            get
            {
                return _Parents;
            }
            set
            {
                OnParentsChanging(value);
                ReportPropertyChanging("Parents");
                _Parents = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Parents");
                OnParentsChanged();
            }
        }
        private global::System.String _Parents;
        partial void OnParentsChanging(global::System.String value);
        partial void OnParentsChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasPrivileges
        {
            get
            {
                return _HasPrivileges;
            }
            set
            {
                OnHasPrivilegesChanging(value);
                ReportPropertyChanging("HasPrivileges");
                _HasPrivileges = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasPrivileges");
                OnHasPrivilegesChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasPrivileges;
        partial void OnHasPrivilegesChanging(Nullable<global::System.Boolean> value);
        partial void OnHasPrivilegesChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HostelAbit
        {
            get
            {
                return _HostelAbit;
            }
            set
            {
                OnHostelAbitChanging(value);
                ReportPropertyChanging("HostelAbit");
                _HostelAbit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HostelAbit");
                OnHostelAbitChanged();
            }
        }
        private Nullable<global::System.Boolean> _HostelAbit;
        partial void OnHostelAbitChanging(Nullable<global::System.Boolean> value);
        partial void OnHostelAbitChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReturnDocumentTypeId
        {
            get
            {
                return _ReturnDocumentTypeId;
            }
            set
            {
                OnReturnDocumentTypeIdChanging(value);
                ReportPropertyChanging("ReturnDocumentTypeId");
                _ReturnDocumentTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReturnDocumentTypeId");
                OnReturnDocumentTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ReturnDocumentTypeId;
        partial void OnReturnDocumentTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnReturnDocumentTypeIdChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonAddInfo_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonAddInfo_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonAddInfo_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonAddInfo_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("OnlinePriem2012Model.FK_PersonAddInfo_Person", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonAddInfo_ReturnDocumentType", "ReturnDocumentType")]
        public ReturnDocumentType ReturnDocumentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReturnDocumentType>("OnlinePriem2012Model.FK_PersonAddInfo_ReturnDocumentType", "ReturnDocumentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReturnDocumentType>("OnlinePriem2012Model.FK_PersonAddInfo_ReturnDocumentType", "ReturnDocumentType").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReturnDocumentType> ReturnDocumentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReturnDocumentType>("OnlinePriem2012Model.FK_PersonAddInfo_ReturnDocumentType", "ReturnDocumentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReturnDocumentType>("OnlinePriem2012Model.FK_PersonAddInfo_ReturnDocumentType", "ReturnDocumentType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="PersonChangeStudyFormReason")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonChangeStudyFormReason : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PersonChangeStudyFormReason.
        /// </summary>
        /// <param name="personId">Исходное значение свойства PersonId.</param>
        public static PersonChangeStudyFormReason CreatePersonChangeStudyFormReason(global::System.Guid personId)
        {
            PersonChangeStudyFormReason personChangeStudyFormReason = new PersonChangeStudyFormReason();
            personChangeStudyFormReason.PersonId = personId;
            return personChangeStudyFormReason;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                if (_PersonId != value)
                {
                    OnPersonIdChanging(value);
                    ReportPropertyChanging("PersonId");
                    _PersonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonId");
                    OnPersonIdChanged();
                }
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonChangeStudyFormReason_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonChangeStudyFormReason_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonChangeStudyFormReason_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonChangeStudyFormReason_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("OnlinePriem2012Model.FK_PersonChangeStudyFormReason_Person", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="PersonContacts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonContacts : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PersonContacts.
        /// </summary>
        /// <param name="personId">Исходное значение свойства PersonId.</param>
        public static PersonContacts CreatePersonContacts(global::System.Guid personId)
        {
            PersonContacts personContacts = new PersonContacts();
            personContacts.PersonId = personId;
            return personContacts;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                if (_PersonId != value)
                {
                    OnPersonIdChanging(value);
                    ReportPropertyChanging("PersonId");
                    _PersonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonId");
                    OnPersonIdChanged();
                }
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mobiles
        {
            get
            {
                return _Mobiles;
            }
            set
            {
                OnMobilesChanging(value);
                ReportPropertyChanging("Mobiles");
                _Mobiles = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mobiles");
                OnMobilesChanged();
            }
        }
        private global::System.String _Mobiles;
        partial void OnMobilesChanging(global::System.String value);
        partial void OnMobilesChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Korpus
        {
            get
            {
                return _Korpus;
            }
            set
            {
                OnKorpusChanging(value);
                ReportPropertyChanging("Korpus");
                _Korpus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Korpus");
                OnKorpusChanged();
            }
        }
        private global::System.String _Korpus;
        partial void OnKorpusChanging(global::System.String value);
        partial void OnKorpusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Flat
        {
            get
            {
                return _Flat;
            }
            set
            {
                OnFlatChanging(value);
                ReportPropertyChanging("Flat");
                _Flat = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Flat");
                OnFlatChanged();
            }
        }
        private global::System.String _Flat;
        partial void OnFlatChanging(global::System.String value);
        partial void OnFlatChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CodeReal
        {
            get
            {
                return _CodeReal;
            }
            set
            {
                OnCodeRealChanging(value);
                ReportPropertyChanging("CodeReal");
                _CodeReal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CodeReal");
                OnCodeRealChanged();
            }
        }
        private global::System.String _CodeReal;
        partial void OnCodeRealChanging(global::System.String value);
        partial void OnCodeRealChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CityReal
        {
            get
            {
                return _CityReal;
            }
            set
            {
                OnCityRealChanging(value);
                ReportPropertyChanging("CityReal");
                _CityReal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CityReal");
                OnCityRealChanged();
            }
        }
        private global::System.String _CityReal;
        partial void OnCityRealChanging(global::System.String value);
        partial void OnCityRealChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StreetReal
        {
            get
            {
                return _StreetReal;
            }
            set
            {
                OnStreetRealChanging(value);
                ReportPropertyChanging("StreetReal");
                _StreetReal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StreetReal");
                OnStreetRealChanged();
            }
        }
        private global::System.String _StreetReal;
        partial void OnStreetRealChanging(global::System.String value);
        partial void OnStreetRealChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String KorpusReal
        {
            get
            {
                return _KorpusReal;
            }
            set
            {
                OnKorpusRealChanging(value);
                ReportPropertyChanging("KorpusReal");
                _KorpusReal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("KorpusReal");
                OnKorpusRealChanged();
            }
        }
        private global::System.String _KorpusReal;
        partial void OnKorpusRealChanging(global::System.String value);
        partial void OnKorpusRealChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FlatReal
        {
            get
            {
                return _FlatReal;
            }
            set
            {
                OnFlatRealChanging(value);
                ReportPropertyChanging("FlatReal");
                _FlatReal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FlatReal");
                OnFlatRealChanged();
            }
        }
        private global::System.String _FlatReal;
        partial void OnFlatRealChanging(global::System.String value);
        partial void OnFlatRealChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryId;
        partial void OnCountryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegionId
        {
            get
            {
                return _RegionId;
            }
            set
            {
                OnRegionIdChanging(value);
                ReportPropertyChanging("RegionId");
                _RegionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionId");
                OnRegionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RegionId;
        partial void OnRegionIdChanging(Nullable<global::System.Int32> value);
        partial void OnRegionIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String House
        {
            get
            {
                return _House;
            }
            set
            {
                OnHouseChanging(value);
                ReportPropertyChanging("House");
                _House = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("House");
                OnHouseChanged();
            }
        }
        private global::System.String _House;
        partial void OnHouseChanging(global::System.String value);
        partial void OnHouseChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HouseReal
        {
            get
            {
                return _HouseReal;
            }
            set
            {
                OnHouseRealChanging(value);
                ReportPropertyChanging("HouseReal");
                _HouseReal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HouseReal");
                OnHouseRealChanged();
            }
        }
        private global::System.String _HouseReal;
        partial void OnHouseRealChanging(global::System.String value);
        partial void OnHouseRealChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ForeignAddressInfo
        {
            get
            {
                return _ForeignAddressInfo;
            }
            set
            {
                OnForeignAddressInfoChanging(value);
                ReportPropertyChanging("ForeignAddressInfo");
                _ForeignAddressInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ForeignAddressInfo");
                OnForeignAddressInfoChanged();
            }
        }
        private global::System.String _ForeignAddressInfo;
        partial void OnForeignAddressInfoChanging(global::System.String value);
        partial void OnForeignAddressInfoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String KladrCode
        {
            get
            {
                return _KladrCode;
            }
            set
            {
                OnKladrCodeChanging(value);
                ReportPropertyChanging("KladrCode");
                _KladrCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("KladrCode");
                OnKladrCodeChanged();
            }
        }
        private global::System.String _KladrCode;
        partial void OnKladrCodeChanging(global::System.String value);
        partial void OnKladrCodeChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonContacts_Region", "Region")]
        public Region Region
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("OnlinePriem2012Model.FK_PersonContacts_Region", "Region").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("OnlinePriem2012Model.FK_PersonContacts_Region", "Region").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Region> RegionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("OnlinePriem2012Model.FK_PersonContacts_Region", "Region");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Region>("OnlinePriem2012Model.FK_PersonContacts_Region", "Region", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonContacts_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OnlinePriem2012Model.FK_PersonContacts_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OnlinePriem2012Model.FK_PersonContacts_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OnlinePriem2012Model.FK_PersonContacts_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("OnlinePriem2012Model.FK_PersonContacts_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonContacts_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonContacts_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonContacts_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonContacts_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("OnlinePriem2012Model.FK_PersonContacts_Person", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="PersonCurrentEducation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonCurrentEducation : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PersonCurrentEducation.
        /// </summary>
        /// <param name="personId">Исходное значение свойства PersonId.</param>
        public static PersonCurrentEducation CreatePersonCurrentEducation(global::System.Guid personId)
        {
            PersonCurrentEducation personCurrentEducation = new PersonCurrentEducation();
            personCurrentEducation.PersonId = personId;
            return personCurrentEducation;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                if (_PersonId != value)
                {
                    OnPersonIdChanging(value);
                    ReportPropertyChanging("PersonId");
                    _PersonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonId");
                    OnPersonIdChanged();
                }
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EducTypeId
        {
            get
            {
                return _EducTypeId;
            }
            set
            {
                OnEducTypeIdChanging(value);
                ReportPropertyChanging("EducTypeId");
                _EducTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EducTypeId");
                OnEducTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EducTypeId;
        partial void OnEducTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnEducTypeIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EducName
        {
            get
            {
                return _EducName;
            }
            set
            {
                OnEducNameChanging(value);
                ReportPropertyChanging("EducName");
                _EducName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EducName");
                OnEducNameChanged();
            }
        }
        private global::System.String _EducName;
        partial void OnEducNameChanging(global::System.String value);
        partial void OnEducNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasAccreditation
        {
            get
            {
                return _HasAccreditation;
            }
            set
            {
                OnHasAccreditationChanging(value);
                ReportPropertyChanging("HasAccreditation");
                _HasAccreditation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasAccreditation");
                OnHasAccreditationChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasAccreditation;
        partial void OnHasAccreditationChanging(Nullable<global::System.Boolean> value);
        partial void OnHasAccreditationChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccreditationNumber
        {
            get
            {
                return _AccreditationNumber;
            }
            set
            {
                OnAccreditationNumberChanging(value);
                ReportPropertyChanging("AccreditationNumber");
                _AccreditationNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccreditationNumber");
                OnAccreditationNumberChanged();
            }
        }
        private global::System.String _AccreditationNumber;
        partial void OnAccreditationNumberChanging(global::System.String value);
        partial void OnAccreditationNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AccreditationDate
        {
            get
            {
                return _AccreditationDate;
            }
            set
            {
                OnAccreditationDateChanging(value);
                ReportPropertyChanging("AccreditationDate");
                _AccreditationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccreditationDate");
                OnAccreditationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AccreditationDate;
        partial void OnAccreditationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAccreditationDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SemesterId
        {
            get
            {
                return _SemesterId;
            }
            set
            {
                OnSemesterIdChanging(value);
                ReportPropertyChanging("SemesterId");
                _SemesterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SemesterId");
                OnSemesterIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SemesterId;
        partial void OnSemesterIdChanging(Nullable<global::System.Int32> value);
        partial void OnSemesterIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StudyLevelId
        {
            get
            {
                return _StudyLevelId;
            }
            set
            {
                OnStudyLevelIdChanging(value);
                ReportPropertyChanging("StudyLevelId");
                _StudyLevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudyLevelId");
                OnStudyLevelIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StudyLevelId;
        partial void OnStudyLevelIdChanging(Nullable<global::System.Int32> value);
        partial void OnStudyLevelIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasScholarship
        {
            get
            {
                return _HasScholarship;
            }
            set
            {
                OnHasScholarshipChanging(value);
                ReportPropertyChanging("HasScholarship");
                _HasScholarship = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasScholarship");
                OnHasScholarshipChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasScholarship;
        partial void OnHasScholarshipChanging(Nullable<global::System.Boolean> value);
        partial void OnHasScholarshipChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryId;
        partial void OnCountryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LicenseProgramId
        {
            get
            {
                return _LicenseProgramId;
            }
            set
            {
                OnLicenseProgramIdChanging(value);
                ReportPropertyChanging("LicenseProgramId");
                _LicenseProgramId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseProgramId");
                OnLicenseProgramIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LicenseProgramId;
        partial void OnLicenseProgramIdChanging(Nullable<global::System.Int32> value);
        partial void OnLicenseProgramIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProfileName
        {
            get
            {
                return _ProfileName;
            }
            set
            {
                OnProfileNameChanging(value);
                ReportPropertyChanging("ProfileName");
                _ProfileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProfileName");
                OnProfileNameChanged();
            }
        }
        private global::System.String _ProfileName;
        partial void OnProfileNameChanging(global::System.String value);
        partial void OnProfileNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonCurrentEducation_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonCurrentEducation_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonCurrentEducation_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonCurrentEducation_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("OnlinePriem2012Model.FK_PersonCurrentEducation_Person", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonCurrentEducation_Semester", "Semester")]
        public Semester Semester
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Semester>("OnlinePriem2012Model.FK_PersonCurrentEducation_Semester", "Semester").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Semester>("OnlinePriem2012Model.FK_PersonCurrentEducation_Semester", "Semester").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Semester> SemesterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Semester>("OnlinePriem2012Model.FK_PersonCurrentEducation_Semester", "Semester");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Semester>("OnlinePriem2012Model.FK_PersonCurrentEducation_Semester", "Semester", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="PersonDisorderInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonDisorderInfo : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PersonDisorderInfo.
        /// </summary>
        /// <param name="personId">Исходное значение свойства PersonId.</param>
        /// <param name="isForIGA">Исходное значение свойства IsForIGA.</param>
        public static PersonDisorderInfo CreatePersonDisorderInfo(global::System.Guid personId, global::System.Boolean isForIGA)
        {
            PersonDisorderInfo personDisorderInfo = new PersonDisorderInfo();
            personDisorderInfo.PersonId = personId;
            personDisorderInfo.IsForIGA = isForIGA;
            return personDisorderInfo;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                if (_PersonId != value)
                {
                    OnPersonIdChanging(value);
                    ReportPropertyChanging("PersonId");
                    _PersonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonId");
                    OnPersonIdChanged();
                }
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YearOfDisorder
        {
            get
            {
                return _YearOfDisorder;
            }
            set
            {
                OnYearOfDisorderChanging(value);
                ReportPropertyChanging("YearOfDisorder");
                _YearOfDisorder = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YearOfDisorder");
                OnYearOfDisorderChanged();
            }
        }
        private global::System.String _YearOfDisorder;
        partial void OnYearOfDisorderChanging(global::System.String value);
        partial void OnYearOfDisorderChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EducationProgramName
        {
            get
            {
                return _EducationProgramName;
            }
            set
            {
                OnEducationProgramNameChanging(value);
                ReportPropertyChanging("EducationProgramName");
                _EducationProgramName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EducationProgramName");
                OnEducationProgramNameChanged();
            }
        }
        private global::System.String _EducationProgramName;
        partial void OnEducationProgramNameChanging(global::System.String value);
        partial void OnEducationProgramNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsForIGA
        {
            get
            {
                return _IsForIGA;
            }
            set
            {
                OnIsForIGAChanging(value);
                ReportPropertyChanging("IsForIGA");
                _IsForIGA = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsForIGA");
                OnIsForIGAChanged();
            }
        }
        private global::System.Boolean _IsForIGA;
        partial void OnIsForIGAChanging(global::System.Boolean value);
        partial void OnIsForIGAChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonDisorderInfo_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonDisorderInfo_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonDisorderInfo_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonDisorderInfo_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("OnlinePriem2012Model.FK_PersonDisorderInfo_Person", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="PersonEducationDocument")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonEducationDocument : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PersonEducationDocument.
        /// </summary>
        /// <param name="personId">Исходное значение свойства PersonId.</param>
        public static PersonEducationDocument CreatePersonEducationDocument(global::System.Guid personId)
        {
            PersonEducationDocument personEducationDocument = new PersonEducationDocument();
            personEducationDocument.PersonId = personId;
            return personEducationDocument;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                if (_PersonId != value)
                {
                    OnPersonIdChanging(value);
                    ReportPropertyChanging("PersonId");
                    _PersonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonId");
                    OnPersonIdChanged();
                }
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SchoolTypeId
        {
            get
            {
                return _SchoolTypeId;
            }
            set
            {
                OnSchoolTypeIdChanging(value);
                ReportPropertyChanging("SchoolTypeId");
                _SchoolTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SchoolTypeId");
                OnSchoolTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SchoolTypeId;
        partial void OnSchoolTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnSchoolTypeIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryEducId
        {
            get
            {
                return _CountryEducId;
            }
            set
            {
                OnCountryEducIdChanging(value);
                ReportPropertyChanging("CountryEducId");
                _CountryEducId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryEducId");
                OnCountryEducIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryEducId;
        partial void OnCountryEducIdChanging(Nullable<global::System.Int32> value);
        partial void OnCountryEducIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegionEducId
        {
            get
            {
                return _RegionEducId;
            }
            set
            {
                OnRegionEducIdChanging(value);
                ReportPropertyChanging("RegionEducId");
                _RegionEducId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionEducId");
                OnRegionEducIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RegionEducId;
        partial void OnRegionEducIdChanging(Nullable<global::System.Int32> value);
        partial void OnRegionEducIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VuzAdditionalTypeId
        {
            get
            {
                return _VuzAdditionalTypeId;
            }
            set
            {
                OnVuzAdditionalTypeIdChanging(value);
                ReportPropertyChanging("VuzAdditionalTypeId");
                _VuzAdditionalTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VuzAdditionalTypeId");
                OnVuzAdditionalTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _VuzAdditionalTypeId;
        partial void OnVuzAdditionalTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnVuzAdditionalTypeIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SchoolCity
        {
            get
            {
                return _SchoolCity;
            }
            set
            {
                OnSchoolCityChanging(value);
                ReportPropertyChanging("SchoolCity");
                _SchoolCity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SchoolCity");
                OnSchoolCityChanged();
            }
        }
        private global::System.String _SchoolCity;
        partial void OnSchoolCityChanging(global::System.String value);
        partial void OnSchoolCityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SchoolName
        {
            get
            {
                return _SchoolName;
            }
            set
            {
                OnSchoolNameChanging(value);
                ReportPropertyChanging("SchoolName");
                _SchoolName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SchoolName");
                OnSchoolNameChanged();
            }
        }
        private global::System.String _SchoolName;
        partial void OnSchoolNameChanging(global::System.String value);
        partial void OnSchoolNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SchoolNum
        {
            get
            {
                return _SchoolNum;
            }
            set
            {
                OnSchoolNumChanging(value);
                ReportPropertyChanging("SchoolNum");
                _SchoolNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SchoolNum");
                OnSchoolNumChanged();
            }
        }
        private global::System.String _SchoolNum;
        partial void OnSchoolNumChanging(global::System.String value);
        partial void OnSchoolNumChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SchoolExitYear
        {
            get
            {
                return _SchoolExitYear;
            }
            set
            {
                OnSchoolExitYearChanging(value);
                ReportPropertyChanging("SchoolExitYear");
                _SchoolExitYear = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SchoolExitYear");
                OnSchoolExitYearChanged();
            }
        }
        private global::System.String _SchoolExitYear;
        partial void OnSchoolExitYearChanging(global::System.String value);
        partial void OnSchoolExitYearChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SchoolExitClassId
        {
            get
            {
                return _SchoolExitClassId;
            }
            set
            {
                OnSchoolExitClassIdChanging(value);
                ReportPropertyChanging("SchoolExitClassId");
                _SchoolExitClassId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SchoolExitClassId");
                OnSchoolExitClassIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SchoolExitClassId;
        partial void OnSchoolExitClassIdChanging(Nullable<global::System.Int32> value);
        partial void OnSchoolExitClassIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Series
        {
            get
            {
                return _Series;
            }
            set
            {
                OnSeriesChanging(value);
                ReportPropertyChanging("Series");
                _Series = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Series");
                OnSeriesChanged();
            }
        }
        private global::System.String _Series;
        partial void OnSeriesChanging(global::System.String value);
        partial void OnSeriesChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsEqual
        {
            get
            {
                return _IsEqual;
            }
            set
            {
                OnIsEqualChanging(value);
                ReportPropertyChanging("IsEqual");
                _IsEqual = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEqual");
                OnIsEqualChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsEqual;
        partial void OnIsEqualChanging(Nullable<global::System.Boolean> value);
        partial void OnIsEqualChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EqualDocumentNumber
        {
            get
            {
                return _EqualDocumentNumber;
            }
            set
            {
                OnEqualDocumentNumberChanging(value);
                ReportPropertyChanging("EqualDocumentNumber");
                _EqualDocumentNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EqualDocumentNumber");
                OnEqualDocumentNumberChanged();
            }
        }
        private global::System.String _EqualDocumentNumber;
        partial void OnEqualDocumentNumberChanging(global::System.String value);
        partial void OnEqualDocumentNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AttestatRegion
        {
            get
            {
                return _AttestatRegion;
            }
            set
            {
                OnAttestatRegionChanging(value);
                ReportPropertyChanging("AttestatRegion");
                _AttestatRegion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AttestatRegion");
                OnAttestatRegionChanged();
            }
        }
        private global::System.String _AttestatRegion;
        partial void OnAttestatRegionChanging(global::System.String value);
        partial void OnAttestatRegionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AttestatSeries
        {
            get
            {
                return _AttestatSeries;
            }
            set
            {
                OnAttestatSeriesChanging(value);
                ReportPropertyChanging("AttestatSeries");
                _AttestatSeries = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AttestatSeries");
                OnAttestatSeriesChanged();
            }
        }
        private global::System.String _AttestatSeries;
        partial void OnAttestatSeriesChanging(global::System.String value);
        partial void OnAttestatSeriesChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AttestatNumber
        {
            get
            {
                return _AttestatNumber;
            }
            set
            {
                OnAttestatNumberChanging(value);
                ReportPropertyChanging("AttestatNumber");
                _AttestatNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AttestatNumber");
                OnAttestatNumberChanged();
            }
        }
        private global::System.String _AttestatNumber;
        partial void OnAttestatNumberChanging(global::System.String value);
        partial void OnAttestatNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> AvgMark
        {
            get
            {
                return _AvgMark;
            }
            set
            {
                OnAvgMarkChanging(value);
                ReportPropertyChanging("AvgMark");
                _AvgMark = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AvgMark");
                OnAvgMarkChanged();
            }
        }
        private Nullable<global::System.Double> _AvgMark;
        partial void OnAvgMarkChanging(Nullable<global::System.Double> value);
        partial void OnAvgMarkChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsExcellent
        {
            get
            {
                return _IsExcellent;
            }
            set
            {
                OnIsExcellentChanging(value);
                ReportPropertyChanging("IsExcellent");
                _IsExcellent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsExcellent");
                OnIsExcellentChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsExcellent;
        partial void OnIsExcellentChanging(Nullable<global::System.Boolean> value);
        partial void OnIsExcellentChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> StartEnglish
        {
            get
            {
                return _StartEnglish;
            }
            set
            {
                OnStartEnglishChanging(value);
                ReportPropertyChanging("StartEnglish");
                _StartEnglish = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartEnglish");
                OnStartEnglishChanged();
            }
        }
        private Nullable<global::System.Boolean> _StartEnglish;
        partial void OnStartEnglishChanging(Nullable<global::System.Boolean> value);
        partial void OnStartEnglishChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> EnglishMark
        {
            get
            {
                return _EnglishMark;
            }
            set
            {
                OnEnglishMarkChanging(value);
                ReportPropertyChanging("EnglishMark");
                _EnglishMark = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnglishMark");
                OnEnglishMarkChanged();
            }
        }
        private Nullable<global::System.Double> _EnglishMark;
        partial void OnEnglishMarkChanging(Nullable<global::System.Double> value);
        partial void OnEnglishMarkChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                OnLanguageIdChanging(value);
                ReportPropertyChanging("LanguageId");
                _LanguageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageId");
                OnLanguageIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LanguageId;
        partial void OnLanguageIdChanging(Nullable<global::System.Int32> value);
        partial void OnLanguageIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasTRKI
        {
            get
            {
                return _HasTRKI;
            }
            set
            {
                OnHasTRKIChanging(value);
                ReportPropertyChanging("HasTRKI");
                _HasTRKI = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasTRKI");
                OnHasTRKIChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasTRKI;
        partial void OnHasTRKIChanging(Nullable<global::System.Boolean> value);
        partial void OnHasTRKIChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TRKICertificateNumber
        {
            get
            {
                return _TRKICertificateNumber;
            }
            set
            {
                OnTRKICertificateNumberChanging(value);
                ReportPropertyChanging("TRKICertificateNumber");
                _TRKICertificateNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TRKICertificateNumber");
                OnTRKICertificateNumberChanged();
            }
        }
        private global::System.String _TRKICertificateNumber;
        partial void OnTRKICertificateNumberChanging(global::System.String value);
        partial void OnTRKICertificateNumberChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonEducationDocument_Country", "Country")]
        public Country CountryEduc
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OnlinePriem2012Model.FK_PersonEducationDocument_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OnlinePriem2012Model.FK_PersonEducationDocument_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryEducReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OnlinePriem2012Model.FK_PersonEducationDocument_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("OnlinePriem2012Model.FK_PersonEducationDocument_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonEducationDocument_Language", "Language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("OnlinePriem2012Model.FK_PersonEducationDocument_Language", "Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("OnlinePriem2012Model.FK_PersonEducationDocument_Language", "Language").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("OnlinePriem2012Model.FK_PersonEducationDocument_Language", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("OnlinePriem2012Model.FK_PersonEducationDocument_Language", "Language", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonEducationDocument_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonEducationDocument_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonEducationDocument_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonEducationDocument_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("OnlinePriem2012Model.FK_PersonEducationDocument_Person", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonEducationDocument_Region", "Region")]
        public Region RegionEduc
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("OnlinePriem2012Model.FK_PersonEducationDocument_Region", "Region").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("OnlinePriem2012Model.FK_PersonEducationDocument_Region", "Region").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Region> RegionEducReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("OnlinePriem2012Model.FK_PersonEducationDocument_Region", "Region");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Region>("OnlinePriem2012Model.FK_PersonEducationDocument_Region", "Region", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="PersonHighEducationInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonHighEducationInfo : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PersonHighEducationInfo.
        /// </summary>
        /// <param name="personId">Исходное значение свойства PersonId.</param>
        public static PersonHighEducationInfo CreatePersonHighEducationInfo(global::System.Guid personId)
        {
            PersonHighEducationInfo personHighEducationInfo = new PersonHighEducationInfo();
            personHighEducationInfo.PersonId = personId;
            return personHighEducationInfo;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                if (_PersonId != value)
                {
                    OnPersonIdChanging(value);
                    ReportPropertyChanging("PersonId");
                    _PersonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonId");
                    OnPersonIdChanged();
                }
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EntryYear
        {
            get
            {
                return _EntryYear;
            }
            set
            {
                OnEntryYearChanging(value);
                ReportPropertyChanging("EntryYear");
                _EntryYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryYear");
                OnEntryYearChanged();
            }
        }
        private Nullable<global::System.Int32> _EntryYear;
        partial void OnEntryYearChanging(Nullable<global::System.Int32> value);
        partial void OnEntryYearChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ExitYear
        {
            get
            {
                return _ExitYear;
            }
            set
            {
                OnExitYearChanging(value);
                ReportPropertyChanging("ExitYear");
                _ExitYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExitYear");
                OnExitYearChanged();
            }
        }
        private Nullable<global::System.Int32> _ExitYear;
        partial void OnExitYearChanging(Nullable<global::System.Int32> value);
        partial void OnExitYearChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiplomaTheme
        {
            get
            {
                return _DiplomaTheme;
            }
            set
            {
                OnDiplomaThemeChanging(value);
                ReportPropertyChanging("DiplomaTheme");
                _DiplomaTheme = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiplomaTheme");
                OnDiplomaThemeChanged();
            }
        }
        private global::System.String _DiplomaTheme;
        partial void OnDiplomaThemeChanging(global::System.String value);
        partial void OnDiplomaThemeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> QualificationId
        {
            get
            {
                return _QualificationId;
            }
            set
            {
                OnQualificationIdChanging(value);
                ReportPropertyChanging("QualificationId");
                _QualificationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QualificationId");
                OnQualificationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _QualificationId;
        partial void OnQualificationIdChanging(Nullable<global::System.Int32> value);
        partial void OnQualificationIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StudyFormId
        {
            get
            {
                return _StudyFormId;
            }
            set
            {
                OnStudyFormIdChanging(value);
                ReportPropertyChanging("StudyFormId");
                _StudyFormId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudyFormId");
                OnStudyFormIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StudyFormId;
        partial void OnStudyFormIdChanging(Nullable<global::System.Int32> value);
        partial void OnStudyFormIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProgramName
        {
            get
            {
                return _ProgramName;
            }
            set
            {
                OnProgramNameChanging(value);
                ReportPropertyChanging("ProgramName");
                _ProgramName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProgramName");
                OnProgramNameChanged();
            }
        }
        private global::System.String _ProgramName;
        partial void OnProgramNameChanging(global::System.String value);
        partial void OnProgramNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonHighEducationInfo_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonHighEducationInfo_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonHighEducationInfo_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonHighEducationInfo_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("OnlinePriem2012Model.FK_PersonHighEducationInfo_Person", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonHighEducationInfo_Qualification", "Qualification")]
        public Qualification Qualification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Qualification>("OnlinePriem2012Model.FK_PersonHighEducationInfo_Qualification", "Qualification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Qualification>("OnlinePriem2012Model.FK_PersonHighEducationInfo_Qualification", "Qualification").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Qualification> QualificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Qualification>("OnlinePriem2012Model.FK_PersonHighEducationInfo_Qualification", "Qualification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Qualification>("OnlinePriem2012Model.FK_PersonHighEducationInfo_Qualification", "Qualification", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="PersonSchoolInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonSchoolInfo : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PersonSchoolInfo.
        /// </summary>
        /// <param name="personId">Исходное значение свойства PersonId.</param>
        public static PersonSchoolInfo CreatePersonSchoolInfo(global::System.Guid personId)
        {
            PersonSchoolInfo personSchoolInfo = new PersonSchoolInfo();
            personSchoolInfo.PersonId = personId;
            return personSchoolInfo;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                if (_PersonId != value)
                {
                    OnPersonIdChanging(value);
                    ReportPropertyChanging("PersonId");
                    _PersonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonId");
                    OnPersonIdChanged();
                }
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SchoolTypeId
        {
            get
            {
                return _SchoolTypeId;
            }
            set
            {
                OnSchoolTypeIdChanging(value);
                ReportPropertyChanging("SchoolTypeId");
                _SchoolTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SchoolTypeId");
                OnSchoolTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SchoolTypeId;
        partial void OnSchoolTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnSchoolTypeIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SchoolExitClassId
        {
            get
            {
                return _SchoolExitClassId;
            }
            set
            {
                OnSchoolExitClassIdChanging(value);
                ReportPropertyChanging("SchoolExitClassId");
                _SchoolExitClassId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SchoolExitClassId");
                OnSchoolExitClassIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SchoolExitClassId;
        partial void OnSchoolExitClassIdChanging(Nullable<global::System.Int32> value);
        partial void OnSchoolExitClassIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SchoolAddress
        {
            get
            {
                return _SchoolAddress;
            }
            set
            {
                OnSchoolAddressChanging(value);
                ReportPropertyChanging("SchoolAddress");
                _SchoolAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SchoolAddress");
                OnSchoolAddressChanged();
            }
        }
        private global::System.String _SchoolAddress;
        partial void OnSchoolAddressChanging(global::System.String value);
        partial void OnSchoolAddressChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonSchoolInfo_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonSchoolInfo_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonSchoolInfo_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonSchoolInfo_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("OnlinePriem2012Model.FK_PersonSchoolInfo_Person", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonSchoolInfo_SchoolExitClass", "SchoolExitClass")]
        public SchoolExitClass SchoolExitClass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolExitClass>("OnlinePriem2012Model.FK_PersonSchoolInfo_SchoolExitClass", "SchoolExitClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolExitClass>("OnlinePriem2012Model.FK_PersonSchoolInfo_SchoolExitClass", "SchoolExitClass").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SchoolExitClass> SchoolExitClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolExitClass>("OnlinePriem2012Model.FK_PersonSchoolInfo_SchoolExitClass", "SchoolExitClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SchoolExitClass>("OnlinePriem2012Model.FK_PersonSchoolInfo_SchoolExitClass", "SchoolExitClass", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="PersonScienceWork")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonScienceWork : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PersonScienceWork.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static PersonScienceWork CreatePersonScienceWork(global::System.Guid id)
        {
            PersonScienceWork personScienceWork = new PersonScienceWork();
            personScienceWork.Id = id;
            return personScienceWork;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PersonId;
        partial void OnPersonIdChanging(Nullable<global::System.Guid> value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkTypeId
        {
            get
            {
                return _WorkTypeId;
            }
            set
            {
                OnWorkTypeIdChanging(value);
                ReportPropertyChanging("WorkTypeId");
                _WorkTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkTypeId");
                OnWorkTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkTypeId;
        partial void OnWorkTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnWorkTypeIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WorkInfo
        {
            get
            {
                return _WorkInfo;
            }
            set
            {
                OnWorkInfoChanging(value);
                ReportPropertyChanging("WorkInfo");
                _WorkInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WorkInfo");
                OnWorkInfoChanged();
            }
        }
        private global::System.String _WorkInfo;
        partial void OnWorkInfoChanging(global::System.String value);
        partial void OnWorkInfoChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonScienceWork_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonScienceWork_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonScienceWork_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonScienceWork_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("OnlinePriem2012Model.FK_PersonScienceWork_Person", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="PersonSportQualification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonSportQualification : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PersonSportQualification.
        /// </summary>
        /// <param name="personId">Исходное значение свойства PersonId.</param>
        public static PersonSportQualification CreatePersonSportQualification(global::System.Guid personId)
        {
            PersonSportQualification personSportQualification = new PersonSportQualification();
            personSportQualification.PersonId = personId;
            return personSportQualification;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                if (_PersonId != value)
                {
                    OnPersonIdChanging(value);
                    ReportPropertyChanging("PersonId");
                    _PersonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonId");
                    OnPersonIdChanged();
                }
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SportQualificationId
        {
            get
            {
                return _SportQualificationId;
            }
            set
            {
                OnSportQualificationIdChanging(value);
                ReportPropertyChanging("SportQualificationId");
                _SportQualificationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportQualificationId");
                OnSportQualificationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SportQualificationId;
        partial void OnSportQualificationIdChanging(Nullable<global::System.Int32> value);
        partial void OnSportQualificationIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OtherSportQualification
        {
            get
            {
                return _OtherSportQualification;
            }
            set
            {
                OnOtherSportQualificationChanging(value);
                ReportPropertyChanging("OtherSportQualification");
                _OtherSportQualification = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OtherSportQualification");
                OnOtherSportQualificationChanged();
            }
        }
        private global::System.String _OtherSportQualification;
        partial void OnOtherSportQualificationChanging(global::System.String value);
        partial void OnOtherSportQualificationChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SportQualificationLevel
        {
            get
            {
                return _SportQualificationLevel;
            }
            set
            {
                OnSportQualificationLevelChanging(value);
                ReportPropertyChanging("SportQualificationLevel");
                _SportQualificationLevel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SportQualificationLevel");
                OnSportQualificationLevelChanged();
            }
        }
        private global::System.String _SportQualificationLevel;
        partial void OnSportQualificationLevelChanging(global::System.String value);
        partial void OnSportQualificationLevelChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonSportQualification_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonSportQualification_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonSportQualification_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonSportQualification_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("OnlinePriem2012Model.FK_PersonSportQualification_Person", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonSportQualification_SportQualification", "SportQualification")]
        public SportQualification SportQualification1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportQualification>("OnlinePriem2012Model.FK_PersonSportQualification_SportQualification", "SportQualification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportQualification>("OnlinePriem2012Model.FK_PersonSportQualification_SportQualification", "SportQualification").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SportQualification> SportQualification1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportQualification>("OnlinePriem2012Model.FK_PersonSportQualification_SportQualification", "SportQualification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SportQualification>("OnlinePriem2012Model.FK_PersonSportQualification_SportQualification", "SportQualification", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="PersonVisaInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonVisaInfo : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PersonVisaInfo.
        /// </summary>
        /// <param name="personId">Исходное значение свойства PersonId.</param>
        public static PersonVisaInfo CreatePersonVisaInfo(global::System.Guid personId)
        {
            PersonVisaInfo personVisaInfo = new PersonVisaInfo();
            personVisaInfo.PersonId = personId;
            return personVisaInfo;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                if (_PersonId != value)
                {
                    OnPersonIdChanging(value);
                    ReportPropertyChanging("PersonId");
                    _PersonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonId");
                    OnPersonIdChanged();
                }
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryId;
        partial void OnCountryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostAddress
        {
            get
            {
                return _PostAddress;
            }
            set
            {
                OnPostAddressChanging(value);
                ReportPropertyChanging("PostAddress");
                _PostAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostAddress");
                OnPostAddressChanged();
            }
        }
        private global::System.String _PostAddress;
        partial void OnPostAddressChanging(global::System.String value);
        partial void OnPostAddressChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Town
        {
            get
            {
                return _Town;
            }
            set
            {
                OnTownChanging(value);
                ReportPropertyChanging("Town");
                _Town = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Town");
                OnTownChanged();
            }
        }
        private global::System.String _Town;
        partial void OnTownChanging(global::System.String value);
        partial void OnTownChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonVisaInfo_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonVisaInfo_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonVisaInfo_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonVisaInfo_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("OnlinePriem2012Model.FK_PersonVisaInfo_Person", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="PersonWork")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonWork : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PersonWork.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="personId">Исходное значение свойства PersonId.</param>
        public static PersonWork CreatePersonWork(global::System.Guid id, global::System.Guid personId)
        {
            PersonWork personWork = new PersonWork();
            personWork.Id = id;
            personWork.PersonId = personId;
            return personWork;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Stage
        {
            get
            {
                return _Stage;
            }
            set
            {
                OnStageChanging(value);
                ReportPropertyChanging("Stage");
                _Stage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Stage");
                OnStageChanged();
            }
        }
        private global::System.String _Stage;
        partial void OnStageChanging(global::System.String value);
        partial void OnStageChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WorkPlace
        {
            get
            {
                return _WorkPlace;
            }
            set
            {
                OnWorkPlaceChanging(value);
                ReportPropertyChanging("WorkPlace");
                _WorkPlace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WorkPlace");
                OnWorkPlaceChanged();
            }
        }
        private global::System.String _WorkPlace;
        partial void OnWorkPlaceChanging(global::System.String value);
        partial void OnWorkPlaceChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WorkProfession
        {
            get
            {
                return _WorkProfession;
            }
            set
            {
                OnWorkProfessionChanging(value);
                ReportPropertyChanging("WorkProfession");
                _WorkProfession = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WorkProfession");
                OnWorkProfessionChanged();
            }
        }
        private global::System.String _WorkProfession;
        partial void OnWorkProfessionChanging(global::System.String value);
        partial void OnWorkProfessionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WorkSpecifications
        {
            get
            {
                return _WorkSpecifications;
            }
            set
            {
                OnWorkSpecificationsChanging(value);
                ReportPropertyChanging("WorkSpecifications");
                _WorkSpecifications = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WorkSpecifications");
                OnWorkSpecificationsChanged();
            }
        }
        private global::System.String _WorkSpecifications;
        partial void OnWorkSpecificationsChanging(global::System.String value);
        partial void OnWorkSpecificationsChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonWork_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonWork_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonWork_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_PersonWork_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("OnlinePriem2012Model.FK_PersonWork_Person", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="Qualification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Qualification : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Qualification.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Qualification CreateQualification(global::System.Int32 id)
        {
            Qualification qualification = new Qualification();
            qualification.Id = id;
            return qualification;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameEng
        {
            get
            {
                return _NameEng;
            }
            set
            {
                OnNameEngChanging(value);
                ReportPropertyChanging("NameEng");
                _NameEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NameEng");
                OnNameEngChanged();
            }
        }
        private global::System.String _NameEng;
        partial void OnNameEngChanging(global::System.String value);
        partial void OnNameEngChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsForAspirant
        {
            get
            {
                return _IsForAspirant;
            }
            set
            {
                OnIsForAspirantChanging(value);
                ReportPropertyChanging("IsForAspirant");
                _IsForAspirant = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsForAspirant");
                OnIsForAspirantChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsForAspirant;
        partial void OnIsForAspirantChanging(Nullable<global::System.Boolean> value);
        partial void OnIsForAspirantChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonHighEducationInfo_Qualification", "PersonHighEducationInfo")]
        public EntityCollection<PersonHighEducationInfo> PersonHighEducationInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonHighEducationInfo>("OnlinePriem2012Model.FK_PersonHighEducationInfo_Qualification", "PersonHighEducationInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonHighEducationInfo>("OnlinePriem2012Model.FK_PersonHighEducationInfo_Qualification", "PersonHighEducationInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="RectorScholarshipApplication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RectorScholarshipApplication : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта RectorScholarshipApplication.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="personId">Исходное значение свойства PersonId.</param>
        public static RectorScholarshipApplication CreateRectorScholarshipApplication(global::System.Guid id, global::System.Guid personId)
        {
            RectorScholarshipApplication rectorScholarshipApplication = new RectorScholarshipApplication();
            rectorScholarshipApplication.Id = id;
            rectorScholarshipApplication.PersonId = personId;
            return rectorScholarshipApplication;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="RectorScholarshipApplicationFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RectorScholarshipApplicationFile : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта RectorScholarshipApplicationFile.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static RectorScholarshipApplicationFile CreateRectorScholarshipApplicationFile(global::System.Guid id)
        {
            RectorScholarshipApplicationFile rectorScholarshipApplicationFile = new RectorScholarshipApplicationFile();
            rectorScholarshipApplicationFile.Id = id;
            return rectorScholarshipApplicationFile;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RectorScholarshipApplicationId
        {
            get
            {
                return _RectorScholarshipApplicationId;
            }
            set
            {
                OnRectorScholarshipApplicationIdChanging(value);
                ReportPropertyChanging("RectorScholarshipApplicationId");
                _RectorScholarshipApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RectorScholarshipApplicationId");
                OnRectorScholarshipApplicationIdChanged();
            }
        }
        private Nullable<global::System.Guid> _RectorScholarshipApplicationId;
        partial void OnRectorScholarshipApplicationIdChanging(Nullable<global::System.Guid> value);
        partial void OnRectorScholarshipApplicationIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FileSize
        {
            get
            {
                return _FileSize;
            }
            set
            {
                OnFileSizeChanging(value);
                ReportPropertyChanging("FileSize");
                _FileSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileSize");
                OnFileSizeChanged();
            }
        }
        private Nullable<global::System.Int32> _FileSize;
        partial void OnFileSizeChanging(Nullable<global::System.Int32> value);
        partial void OnFileSizeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileExtention
        {
            get
            {
                return _FileExtention;
            }
            set
            {
                OnFileExtentionChanging(value);
                ReportPropertyChanging("FileExtention");
                _FileExtention = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileExtention");
                OnFileExtentionChanged();
            }
        }
        private global::System.String _FileExtention;
        partial void OnFileExtentionChanging(global::System.String value);
        partial void OnFileExtentionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] FileData
        {
            get
            {
                return StructuralObject.GetValidValue(_FileData);
            }
            set
            {
                OnFileDataChanging(value);
                ReportPropertyChanging("FileData");
                _FileData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileData");
                OnFileDataChanged();
            }
        }
        private global::System.Byte[] _FileData;
        partial void OnFileDataChanging(global::System.Byte[] value);
        partial void OnFileDataChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LoadDate
        {
            get
            {
                return _LoadDate;
            }
            set
            {
                OnLoadDateChanging(value);
                ReportPropertyChanging("LoadDate");
                _LoadDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoadDate");
                OnLoadDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LoadDate;
        partial void OnLoadDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLoadDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsReadOnly
        {
            get
            {
                return _IsReadOnly;
            }
            set
            {
                OnIsReadOnlyChanging(value);
                ReportPropertyChanging("IsReadOnly");
                _IsReadOnly = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsReadOnly");
                OnIsReadOnlyChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsReadOnly;
        partial void OnIsReadOnlyChanging(Nullable<global::System.Boolean> value);
        partial void OnIsReadOnlyChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MimeType
        {
            get
            {
                return _MimeType;
            }
            set
            {
                OnMimeTypeChanging(value);
                ReportPropertyChanging("MimeType");
                _MimeType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MimeType");
                OnMimeTypeChanged();
            }
        }
        private global::System.String _MimeType;
        partial void OnMimeTypeChanging(global::System.String value);
        partial void OnMimeTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsApproved;
        partial void OnIsApprovedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FailReason
        {
            get
            {
                return _FailReason;
            }
            set
            {
                OnFailReasonChanging(value);
                ReportPropertyChanging("FailReason");
                _FailReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FailReason");
                OnFailReasonChanged();
            }
        }
        private global::System.String _FailReason;
        partial void OnFailReasonChanging(global::System.String value);
        partial void OnFailReasonChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FileTypeId
        {
            get
            {
                return _FileTypeId;
            }
            set
            {
                OnFileTypeIdChanging(value);
                ReportPropertyChanging("FileTypeId");
                _FileTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileTypeId");
                OnFileTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FileTypeId;
        partial void OnFileTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnFileTypeIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="Region")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Region : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Region.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Region CreateRegion(global::System.Int32 id)
        {
            Region region = new Region();
            region.Id = id;
            return region;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Distance
        {
            get
            {
                return _Distance;
            }
            set
            {
                OnDistanceChanging(value);
                ReportPropertyChanging("Distance");
                _Distance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Distance");
                OnDistanceChanged();
            }
        }
        private Nullable<global::System.Int32> _Distance;
        partial void OnDistanceChanging(Nullable<global::System.Int32> value);
        partial void OnDistanceChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegionNumber
        {
            get
            {
                return _RegionNumber;
            }
            set
            {
                OnRegionNumberChanging(value);
                ReportPropertyChanging("RegionNumber");
                _RegionNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionNumber");
                OnRegionNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _RegionNumber;
        partial void OnRegionNumberChanging(Nullable<global::System.Int32> value);
        partial void OnRegionNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RodName
        {
            get
            {
                return _RodName;
            }
            set
            {
                OnRodNameChanging(value);
                ReportPropertyChanging("RodName");
                _RodName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RodName");
                OnRodNameChanged();
            }
        }
        private global::System.String _RodName;
        partial void OnRodNameChanging(global::System.String value);
        partial void OnRodNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PriemDictionaryId
        {
            get
            {
                return _PriemDictionaryId;
            }
            set
            {
                OnPriemDictionaryIdChanging(value);
                ReportPropertyChanging("PriemDictionaryId");
                _PriemDictionaryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriemDictionaryId");
                OnPriemDictionaryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PriemDictionaryId;
        partial void OnPriemDictionaryIdChanging(Nullable<global::System.Int32> value);
        partial void OnPriemDictionaryIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String KladrCode
        {
            get
            {
                return _KladrCode;
            }
            set
            {
                OnKladrCodeChanging(value);
                ReportPropertyChanging("KladrCode");
                _KladrCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("KladrCode");
                OnKladrCodeChanged();
            }
        }
        private global::System.String _KladrCode;
        partial void OnKladrCodeChanging(global::System.String value);
        partial void OnKladrCodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegionNumberStringValue
        {
            get
            {
                return _RegionNumberStringValue;
            }
            set
            {
                OnRegionNumberStringValueChanging(value);
                ReportPropertyChanging("RegionNumberStringValue");
                _RegionNumberStringValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegionNumberStringValue");
                OnRegionNumberStringValueChanged();
            }
        }
        private global::System.String _RegionNumberStringValue;
        partial void OnRegionNumberStringValueChanging(global::System.String value);
        partial void OnRegionNumberStringValueChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonContacts_Region", "PersonContacts")]
        public EntityCollection<PersonContacts> PersonContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonContacts>("OnlinePriem2012Model.FK_PersonContacts_Region", "PersonContacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonContacts>("OnlinePriem2012Model.FK_PersonContacts_Region", "PersonContacts", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonEducationDocument_Region", "PersonEducationDocument")]
        public EntityCollection<PersonEducationDocument> PersonEducationDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonEducationDocument>("OnlinePriem2012Model.FK_PersonEducationDocument_Region", "PersonEducationDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonEducationDocument>("OnlinePriem2012Model.FK_PersonEducationDocument_Region", "PersonEducationDocument", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="ReturnDocumentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReturnDocumentType : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ReturnDocumentType.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static ReturnDocumentType CreateReturnDocumentType(global::System.Int32 id)
        {
            ReturnDocumentType returnDocumentType = new ReturnDocumentType();
            returnDocumentType.Id = id;
            return returnDocumentType;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonAddInfo_ReturnDocumentType", "PersonAddInfo")]
        public EntityCollection<PersonAddInfo> PersonAddInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonAddInfo>("OnlinePriem2012Model.FK_PersonAddInfo_ReturnDocumentType", "PersonAddInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonAddInfo>("OnlinePriem2012Model.FK_PersonAddInfo_ReturnDocumentType", "PersonAddInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="SchoolExitClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SchoolExitClass : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта SchoolExitClass.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static SchoolExitClass CreateSchoolExitClass(global::System.Int32 id)
        {
            SchoolExitClass schoolExitClass = new SchoolExitClass();
            schoolExitClass.Id = id;
            return schoolExitClass;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonSchoolInfo_SchoolExitClass", "PersonSchoolInfo")]
        public EntityCollection<PersonSchoolInfo> PersonSchoolInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonSchoolInfo>("OnlinePriem2012Model.FK_PersonSchoolInfo_SchoolExitClass", "PersonSchoolInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonSchoolInfo>("OnlinePriem2012Model.FK_PersonSchoolInfo_SchoolExitClass", "PersonSchoolInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="Semester")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Semester : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Semester.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="isIGA">Исходное значение свойства IsIGA.</param>
        public static Semester CreateSemester(global::System.Int32 id, global::System.Boolean isIGA)
        {
            Semester semester = new Semester();
            semester.Id = id;
            semester.IsIGA = isIGA;
            return semester;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EducYear
        {
            get
            {
                return _EducYear;
            }
            set
            {
                OnEducYearChanging(value);
                ReportPropertyChanging("EducYear");
                _EducYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EducYear");
                OnEducYearChanged();
            }
        }
        private Nullable<global::System.Int32> _EducYear;
        partial void OnEducYearChanging(Nullable<global::System.Int32> value);
        partial void OnEducYearChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsIGA
        {
            get
            {
                return _IsIGA;
            }
            set
            {
                OnIsIGAChanging(value);
                ReportPropertyChanging("IsIGA");
                _IsIGA = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsIGA");
                OnIsIGAChanged();
            }
        }
        private global::System.Boolean _IsIGA;
        partial void OnIsIGAChanging(global::System.Boolean value);
        partial void OnIsIGAChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Entry_Semester", "Entry")]
        public EntityCollection<Entry> Entry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Entry>("OnlinePriem2012Model.FK_Entry_Semester", "Entry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Entry>("OnlinePriem2012Model.FK_Entry_Semester", "Entry", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonCurrentEducation_Semester", "PersonCurrentEducation")]
        public EntityCollection<PersonCurrentEducation> PersonCurrentEducation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonCurrentEducation>("OnlinePriem2012Model.FK_PersonCurrentEducation_Semester", "PersonCurrentEducation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonCurrentEducation>("OnlinePriem2012Model.FK_PersonCurrentEducation_Semester", "PersonCurrentEducation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="SP_StudyLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SP_StudyLevel : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта SP_StudyLevel.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static SP_StudyLevel CreateSP_StudyLevel(global::System.Int32 id)
        {
            SP_StudyLevel sP_StudyLevel = new SP_StudyLevel();
            sP_StudyLevel.Id = id;
            return sP_StudyLevel;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StudyLevelGroupId
        {
            get
            {
                return _StudyLevelGroupId;
            }
            set
            {
                OnStudyLevelGroupIdChanging(value);
                ReportPropertyChanging("StudyLevelGroupId");
                _StudyLevelGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudyLevelGroupId");
                OnStudyLevelGroupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StudyLevelGroupId;
        partial void OnStudyLevelGroupIdChanging(Nullable<global::System.Int32> value);
        partial void OnStudyLevelGroupIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="SportQualification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SportQualification : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта SportQualification.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static SportQualification CreateSportQualification(global::System.Int32 id)
        {
            SportQualification sportQualification = new SportQualification();
            sportQualification.Id = id;
            return sportQualification;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Acronym
        {
            get
            {
                return _Acronym;
            }
            set
            {
                OnAcronymChanging(value);
                ReportPropertyChanging("Acronym");
                _Acronym = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Acronym");
                OnAcronymChanged();
            }
        }
        private global::System.String _Acronym;
        partial void OnAcronymChanging(global::System.String value);
        partial void OnAcronymChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_PersonSportQualification_SportQualification", "PersonSportQualification")]
        public EntityCollection<PersonSportQualification> PersonSportQualification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonSportQualification>("OnlinePriem2012Model.FK_PersonSportQualification_SportQualification", "PersonSportQualification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonSportQualification>("OnlinePriem2012Model.FK_PersonSportQualification_SportQualification", "PersonSportQualification", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта User.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="campaignYear">Исходное значение свойства CampaignYear.</param>
        public static User CreateUser(global::System.Guid id, global::System.Int32 campaignYear)
        {
            User user = new User();
            user.Id = id;
            user.CampaignYear = campaignYear;
            return user;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SID
        {
            get
            {
                return _SID;
            }
            set
            {
                OnSIDChanging(value);
                ReportPropertyChanging("SID");
                _SID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SID");
                OnSIDChanged();
            }
        }
        private global::System.String _SID;
        partial void OnSIDChanging(global::System.String value);
        partial void OnSIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsApproved;
        partial void OnIsApprovedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailTicket
        {
            get
            {
                return _EmailTicket;
            }
            set
            {
                OnEmailTicketChanging(value);
                ReportPropertyChanging("EmailTicket");
                _EmailTicket = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailTicket");
                OnEmailTicketChanged();
            }
        }
        private global::System.String _EmailTicket;
        partial void OnEmailTicketChanging(global::System.String value);
        partial void OnEmailTicketChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsForeign
        {
            get
            {
                return _IsForeign;
            }
            set
            {
                OnIsForeignChanging(value);
                ReportPropertyChanging("IsForeign");
                _IsForeign = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsForeign");
                OnIsForeignChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsForeign;
        partial void OnIsForeignChanging(Nullable<global::System.Boolean> value);
        partial void OnIsForeignChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UILanguage
        {
            get
            {
                return _UILanguage;
            }
            set
            {
                OnUILanguageChanging(value);
                ReportPropertyChanging("UILanguage");
                _UILanguage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UILanguage");
                OnUILanguageChanged();
            }
        }
        private global::System.String _UILanguage;
        partial void OnUILanguageChanging(global::System.String value);
        partial void OnUILanguageChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDormsAccount
        {
            get
            {
                return _IsDormsAccount;
            }
            set
            {
                OnIsDormsAccountChanging(value);
                ReportPropertyChanging("IsDormsAccount");
                _IsDormsAccount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDormsAccount");
                OnIsDormsAccountChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDormsAccount;
        partial void OnIsDormsAccountChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDormsAccountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RegDate
        {
            get
            {
                return _RegDate;
            }
            set
            {
                OnRegDateChanging(value);
                ReportPropertyChanging("RegDate");
                _RegDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegDate");
                OnRegDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RegDate;
        partial void OnRegDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRegDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CampaignYear
        {
            get
            {
                return _CampaignYear;
            }
            set
            {
                OnCampaignYearChanging(value);
                ReportPropertyChanging("CampaignYear");
                _CampaignYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CampaignYear");
                OnCampaignYearChanged();
            }
        }
        private global::System.Int32 _CampaignYear;
        partial void OnCampaignYearChanging(global::System.Int32 value);
        partial void OnCampaignYearChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Person_User", "Person")]
        public EntityCollection<Person> Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("OnlinePriem2012Model.FK_Person_User", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("OnlinePriem2012Model.FK_Person_User", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_Person_User1", "Person")]
        public Person Person1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_Person_User1", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_Person_User1", "Person").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> Person1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("OnlinePriem2012Model.FK_Person_User1", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("OnlinePriem2012Model.FK_Person_User1", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_User_User", "User1")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OnlinePriem2012Model.FK_User_User", "User1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OnlinePriem2012Model.FK_User_User", "User1").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OnlinePriem2012Model.FK_User_User", "User1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("OnlinePriem2012Model.FK_User_User", "User1", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OnlinePriem2012Model", "FK_User_User", "User")]
        public User User2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OnlinePriem2012Model.FK_User_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OnlinePriem2012Model.FK_User_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OnlinePriem2012Model.FK_User_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("OnlinePriem2012Model.FK_User_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OnlinePriem2012Model", Name="VuzAdditionalType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VuzAdditionalType : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта VuzAdditionalType.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static VuzAdditionalType CreateVuzAdditionalType(global::System.Int32 id)
        {
            VuzAdditionalType vuzAdditionalType = new VuzAdditionalType();
            vuzAdditionalType.Id = id;
            return vuzAdditionalType;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameEng
        {
            get
            {
                return _NameEng;
            }
            set
            {
                OnNameEngChanging(value);
                ReportPropertyChanging("NameEng");
                _NameEng = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NameEng");
                OnNameEngChanged();
            }
        }
        private global::System.String _NameEng;
        partial void OnNameEngChanging(global::System.String value);
        partial void OnNameEngChanged();

        #endregion

    
    }

    #endregion

    
}
