<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnCreateApp" xml:space="preserve">
    <value>Create an application</value>
  </data>
  <data name="chbNeedHostel" xml:space="preserve">
    <value>I need hostel during education period</value>
  </data>
  <data name="ErrorHasApplication" xml:space="preserve">
    <value>The application has already applied</value>
  </data>
  <data name="HeaderFaculty" xml:space="preserve">
    <value>Select the faculty</value>
  </data>
  <data name="HeaderObrazProgram" xml:space="preserve">
    <value>Select the study program</value>
  </data>
  <data name="HeaderObtainingLevel" xml:space="preserve">
    <value>Your obtaining level:</value>
  </data>
  <data name="HeaderProfession" xml:space="preserve">
    <value>Select the profession</value>
  </data>
  <data name="HeaderProfile" xml:space="preserve">
    <value>Select the profile</value>
  </data>
  <data name="PageSubheader" xml:space="preserve">
    <value>New Application</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>Create a new application</value>
  </data>
  <data name="IsParallel" xml:space="preserve">
    <value>Parallel education</value>
  </data>
  <data name="IsReduced" xml:space="preserve">
    <value>Second higher education</value>
  </data>
  <data name="IsSecond" xml:space="preserve">
    <value>For the persons with higher education</value>
  </data>
  <data name="Select_FirstCourse" xml:space="preserve">
    <value>Bachelor/Specialist</value>
  </data>
  <data name="Select_Magistery" xml:space="preserve">
    <value>Magistery</value>
  </data>
  <data name="Select_StudyBasis1" xml:space="preserve">
    <value>Budget places</value>
  </data>
  <data name="Select_StudyBasis2" xml:space="preserve">
    <value>Paid</value>
  </data>
  <data name="Select_StudyForm1" xml:space="preserve">
    <value>Full-Time</value>
  </data>
  <data name="Select_StudyForm2" xml:space="preserve">
    <value>Part-Time</value>
  </data>
  <data name="StudyBasis" xml:space="preserve">
    <value>Select study basis</value>
  </data>
  <data name="StudyForm" xml:space="preserve">
    <value>Select study form</value>
  </data>
  <data name="HeaderFirstCourse_1" xml:space="preserve">
    <value>You are entering on the </value>
  </data>
  <data name="HeaderFirstCourse_2" xml:space="preserve">
    <value>first course</value>
  </data>
  <data name="NewApp_2MoreEntry" xml:space="preserve">
    <value>2 more entries are aviable</value>
  </data>
  <data name="NewApp_NoEntry" xml:space="preserve">
    <value>No entry are aviable</value>
  </data>
  <data name="NewApp_NotOpenedEntry" xml:space="preserve">
    <value>Entry is not opened yet</value>
  </data>
  <data name="NewApp_ClosedEntry" xml:space="preserve">
    <value>Entry is closed</value>
  </data>
  <data name="NewApp_HasApplicationOnEntry" xml:space="preserve">
    <value>Заявление на данную программу уже подано</value>
  </data>
</root>