<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Address" xml:space="preserve">
    <value>Permanent address</value>
  </data>
  <data name="AddressMessage" xml:space="preserve">
    <value>Specify your permament address</value>
  </data>
  <data name="Agree" xml:space="preserve">
    <value>I agree with this conditions</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>Date of  birth</value>
  </data>
  <data name="BirthDateMessage" xml:space="preserve">
    <value>Specity your date of birth</value>
  </data>
  <data name="BirthPlace" xml:space="preserve">
    <value>Place of birth</value>
  </data>
  <data name="BirthPlaceMessage" xml:space="preserve">
    <value>Specify your place of birth</value>
  </data>
  <data name="btnRegister" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="FormMainHeader" xml:space="preserve">
    <value>Please, fill the form to continue</value>
  </data>
  <data name="HeaderAddress" xml:space="preserve">
    <value>Your address</value>
  </data>
  <data name="HeaderEducation" xml:space="preserve">
    <value>Education (name, place, dates of entering and graduation):</value>
  </data>
  <data name="HeaderForeignLanguages" xml:space="preserve">
    <value>What languages do you know? What is the level of your knowledge of the foreign languages?</value>
  </data>
  <data name="HeaderJob" xml:space="preserve">
    <value>Your job (occupation) or place of study at the moment of application</value>
  </data>
  <data name="HeaderPassport" xml:space="preserve">
    <value>National passport for entering the Russian Federation</value>
  </data>
  <data name="HeaderPersonalInformation" xml:space="preserve">
    <value>Personal Informaion</value>
  </data>
  <data name="HeaderPersonalOffice" xml:space="preserve">
    <value>Personal Office for foreign users</value>
  </data>
  <data name="HeaderPrivacyTerms" xml:space="preserve">
    <value>&lt;b&gt;Important: &lt;/b&gt;I declare that the information given on this form is correct. I’m informed about the requirements for a candidate to study in the Russian Federation and for the documents, as well as the terms of staying in the Russian Federation. I give my consent to processing the information provided on this form.</value>
  </data>
  <data name="HeaderVisa" xml:space="preserve">
    <value>Which embassy or consulate of the Russian Federation abroad processes your visa?</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Level" xml:space="preserve">
    <value>Level</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name, father’s name</value>
  </data>
  <data name="NameMessage" xml:space="preserve">
    <value>Type your name</value>
  </data>
  <data name="NationalityId" xml:space="preserve">
    <value>Citizenship</value>
  </data>
  <data name="ObtainingLevelId" xml:space="preserve">
    <value>What level of education do you want to obtain in SPbSU?</value>
  </data>
  <data name="PassportDate" xml:space="preserve">
    <value>Date of issue</value>
  </data>
  <data name="PassportDateMessage" xml:space="preserve">
    <value>Specify the date of issue</value>
  </data>
  <data name="PassportExpire" xml:space="preserve">
    <value>Date of expire</value>
  </data>
  <data name="PassportExpireMessage" xml:space="preserve">
    <value />
  </data>
  <data name="PassportNumber" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="PassportNumberMessage" xml:space="preserve">
    <value>Specify the passport number</value>
  </data>
  <data name="PassportSeries" xml:space="preserve">
    <value>Series</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone number (in Russia)</value>
  </data>
  <data name="PhoneMessage" xml:space="preserve">
    <value>Specify the phone number</value>
  </data>
  <data name="Sex" xml:space="preserve">
    <value>Sex</value>
  </data>
  <data name="SexFemale" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="SexMale" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="StudyFinish" xml:space="preserve">
    <value>Date of finishing/graduation</value>
  </data>
  <data name="StudyFinishMessage" xml:space="preserve">
    <value />
  </data>
  <data name="StudyLevelId" xml:space="preserve">
    <value>What level of education have you got?</value>
  </data>
  <data name="StudyPlace" xml:space="preserve">
    <value>Name, place</value>
  </data>
  <data name="StudyPlaceMessage" xml:space="preserve">
    <value>Specify the study place</value>
  </data>
  <data name="StudyStart" xml:space="preserve">
    <value>Date of entering</value>
  </data>
  <data name="StudyStartMessage" xml:space="preserve">
    <value>Specify the date of start</value>
  </data>
  <data name="Surname" xml:space="preserve">
    <value>Family name/Surname (as in your passport)</value>
  </data>
  <data name="SurnameMessage" xml:space="preserve">
    <value>Please, enter your surname</value>
  </data>
  <data name="VisaCountryName" xml:space="preserve">
    <value>State/Country</value>
  </data>
  <data name="VisaCountryNameMessage" xml:space="preserve">
    <value>Specify the country</value>
  </data>
  <data name="VisaPostAddress" xml:space="preserve">
    <value>Postal address</value>
  </data>
  <data name="VisaPostAddressMessage" xml:space="preserve">
    <value>Specify the address</value>
  </data>
  <data name="VisaTownName" xml:space="preserve">
    <value>Town/City</value>
  </data>
  <data name="VisaTownNameMessage" xml:space="preserve">
    <value>Specify the town</value>
  </data>
  <data name="AgreeError" xml:space="preserve">
    <value>You must agree with terms</value>
  </data>
</root>